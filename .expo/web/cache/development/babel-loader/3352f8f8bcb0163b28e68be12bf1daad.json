{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/abubakarakram/development/projects/backup bar peakk/client/src/components/AlertComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AwesomeAlert from 'react-native-awesome-alerts';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.showAlert = function () {\n      _this.setState({\n        showAlert: true\n      });\n    };\n\n    _this.hideAlert = function () {\n      _this.setState({\n        showAlert: false\n      });\n    };\n\n    _this.state = {\n      showAlert: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"the popup modal called\");\n      this.showAlert();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var showAlert = this.state.showAlert;\n      var navigation = this.props.navigation;\n      console.log(\"the props\", this.props.showError);\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, React.createElement(AwesomeAlert, {\n        show: this.props.showError,\n        title: \"SuccessFul\",\n        titleStyle: {\n          fontWeight: '700',\n          fontSize: 20\n        },\n        messageStyle: {\n          textAlign: 'center',\n          fontWeight: '500',\n          fontSize: 16,\n          color: '#f0357c'\n        },\n        message: this.props.message ? this.props.message : \"This is testing error messag etext\",\n        closeOnTouchOutside: false,\n        contentContainerStyle: {\n          minWidth: 250,\n          maxWidth: 250\n        },\n        closeOnHardwareBackPress: false,\n        showCancelButton: false,\n        showConfirmButton: !this.props.rating,\n        confirmText: \"ok\",\n        confirmButtonColor: \"#29adc4\",\n        confirmButtonStyle: {\n          minWidth: 100,\n          maxWidth: 100,\n          textAlign: 'center'\n        },\n        confirmButtonTextStyle: {\n          fontSize: 25,\n          textAlign: 'center'\n        },\n        onConfirmPressed: function onConfirmPressed() {\n          _this2.props.closeModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  button: {\n    margin: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 7,\n    borderRadius: 5,\n    backgroundColor: \"#AEDEF4\"\n  },\n  text: {\n    color: '#fff',\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/src/components/AlertComponent.js"],"names":["React","AwesomeAlert","App","props","showAlert","setState","hideAlert","state","console","log","navigation","showError","styles","container","fontWeight","fontSize","textAlign","color","message","minWidth","maxWidth","rating","closeModal","Component","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","button","margin","paddingHorizontal","paddingVertical","borderRadius","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity } from 'react-native';\n \nimport AwesomeAlert from 'react-native-awesome-alerts';\n \nexport default class App extends React.Component {\n \n  constructor(props) {\n    super(props);\n    this.state = { showAlert: false };\n  };\n \n  showAlert = () => {\n    this.setState({\n      showAlert: true\n    });\n  };\n \n  hideAlert = () => {\n    this.setState({\n      showAlert: false\n    });\n  };\n\n  componentDidMount(){\n    console.log(\"the popup modal called\")\n    this.showAlert();\n  }\n \n  render() {\n    const {showAlert} = this.state;\n    const { navigation } = this.props;\n    console.log(\"the props\", this.props.showError)\n    return (\n      <View style={styles.container}>\n \n        {/* <Text>I'm AwesomeAlert</Text>\n        <TouchableOpacity onPress={() => {\n          this.showAlert();\n        }}>\n          <View style={styles.button}>\n            <Text style={styles.text}>Try me!</Text>\n          </View>\n        </TouchableOpacity> */}\n \n        <AwesomeAlert\n          show={this.props.showError}\n          title=\"SuccessFul\"\n          titleStyle ={{ fontWeight: '700', fontSize: 20 }}\n          messageStyle = {{ textAlign: 'center', fontWeight: '500', fontSize: 16, color: '#f0357c' }}\n          message= {this.props.message ? this.props.message : \"This is testing error messag etext\"}\n          closeOnTouchOutside={false}\n          contentContainerStyle = {{ minWidth: 250, maxWidth: 250 }}\n          closeOnHardwareBackPress={false}\n          showCancelButton={false}\n          showConfirmButton={ !this.props.rating}\n          confirmText=\"ok\"\n          confirmButtonColor=\"#29adc4\"\n          confirmButtonStyle = {{ minWidth: 100, maxWidth: 100 , textAlign: 'center'}}\n          confirmButtonTextStyle = {{ fontSize: 25 , textAlign: 'center'}}\n          onConfirmPressed={() => {\n            this.props.closeModal()\n          }}\n        />\n      </View>\n    );\n  };\n};\n \nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n  },\n  button: {\n    margin: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 7,\n    borderRadius: 5,\n    backgroundColor: \"#AEDEF4\",\n  },\n  text: {\n    color: '#fff',\n    fontSize: 15\n  }\n});\n "]},"metadata":{},"sourceType":"module"}
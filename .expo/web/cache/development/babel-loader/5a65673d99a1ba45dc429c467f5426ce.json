{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/abubakarakram/development/projects/backup bar peakk/client/App.js\";\n\nimport React from 'react';\nimport { registerRootComponent } from 'expo';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport businessReducer from \"./redux/reducers/Business\";\nimport { FirstScreenNavigator, SecondScreenNavigator, MyVibeTab } from \"./CustomNavigation\";\nimport { useRoute } from '@react-navigation/native';\nimport Image from \"react-native-web/dist/exports/Image\";\nvar Tab = createBottomTabNavigator();\nimport store from \"./redux/store\";\n\nvar App = function App() {\n  return React.createElement(React.Fragment, null, React.createElement(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Navigator, {\n    initialRouteName: \"Screen 1\",\n    tabBarOptions: {\n      activeTintColor: 'red',\n      inactiveTintColor: 'grey',\n      style: {\n        backgroundColor: 'white',\n        borderTopWidth: 0,\n        shadowOffset: {\n          width: 5,\n          height: 3\n        },\n        shadowColor: 'black',\n        shadowOpacity: 0.5,\n        elevation: 5\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Screen 1\",\n    component: FirstScreenNavigator,\n    options: function options(_ref) {\n      var navigation = _ref.navigation;\n      var currentRoute = navigation.state;\n      return {\n        tabBarVisible: false,\n        tabBarLabel: 'Home',\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var tintColor = _ref2.tintColor;\n          return React.createElement(Icon, {\n            name: \"ios-list-box\",\n            color: tintColor,\n            size: 24,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/App.js"],"names":["React","registerRootComponent","Icon","NavigationContainer","createBottomTabNavigator","Provider","createStore","businessReducer","FirstScreenNavigator","SecondScreenNavigator","MyVibeTab","useRoute","Tab","store","App","activeTintColor","inactiveTintColor","style","backgroundColor","borderTopWidth","shadowOffset","width","height","shadowColor","shadowOpacity","elevation","navigation","currentRoute","state","tabBarVisible","tabBarLabel","tabBarIcon","tintColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,QAAsC,MAAtC;AACA,OAAOC,IAAP;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,wBAAR,QAAuC,+BAAvC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,eAAP;AACA,SAAQC,oBAAR,EAA8BC,qBAA9B,EAAqDC,SAArD;AACA,SAAQC,QAAR,QAAuB,0BAAvB;;AAEA,IAAMC,GAAG,GAAGR,wBAAwB,EAApC;AAEA,OAAOS,KAAP;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,SACE,0CACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,SAAL;AACE,IAAA,gBAAgB,EAAG,UADrB;AAEE,IAAA,aAAa,EAAI;AACfE,MAAAA,eAAe,EAAE,KADF;AAEfC,MAAAA,iBAAiB,EAAE,MAFJ;AAGfC,MAAAA,KAAK,EAAE;AACLC,QAAAA,eAAe,EAAE,OADZ;AAELC,QAAAA,cAAc,EAAE,CAFX;AAGLC,QAAAA,YAAY,EAAE;AAAEC,UAAAA,KAAK,EAAE,CAAT;AAAYC,UAAAA,MAAM,EAAE;AAApB,SAHT;AAILC,QAAAA,WAAW,EAAE,OAJR;AAKLC,QAAAA,aAAa,EAAE,GALV;AAMLC,QAAAA,SAAS,EAAE;AANN;AAHQ,KAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBE,oBAAC,GAAD,CAAK,MAAL;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAEjB,oBAFb;AAGE,IAAA,OAAO,EAAM,uBAAmB;AAAA,UAAhBkB,UAAgB,QAAhBA,UAAgB;AAC9B,UAAMC,YAAY,GAAGD,UAAU,CAACE,KAAhC;AAGA,aAAM;AACJC,QAAAA,aAAa,EAAE,KADX;AAEJC,QAAAA,WAAW,EAAE,MAFT;AAGJC,QAAAA,UAAU,EAAE;AAAA,cAAGC,SAAH,SAAGA,SAAH;AAAA,iBACV,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAC,cAAX;AAA0B,YAAA,KAAK,EAAEA,SAAjC;AAA4C,YAAA,IAAI,EAAE,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU;AAAA;AAHR,OAAN;AAOD,KAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF,CADF,CADF,CADF;AAgFD,CAjFD;;AAoFA,eAAelB,GAAf","sourcesContent":["import React from 'react';\nimport { registerRootComponent } from 'expo';\nimport Icon from 'react-native-vector-icons/Ionicons'\nimport {NavigationContainer} from '@react-navigation/native'\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs'\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport businessReducer from './redux/reducers/Business';\nimport {FirstScreenNavigator, SecondScreenNavigator, MyVibeTab} from './CustomNavigation'\nimport {useRoute} from '@react-navigation/native';\nimport { Image } from 'react-native';\nconst Tab = createBottomTabNavigator();\n\nimport store from './redux/store';\n\nconst App = () => {\n  return (\n    <>\n      <Provider store={store}>  \n        <NavigationContainer>\n          <Tab.Navigator\n            initialRouteName = \"Screen 1\"\n            tabBarOptions = {{\n              activeTintColor: 'red',\n              inactiveTintColor: 'grey',\n              style: {\n                backgroundColor: 'white',\n                borderTopWidth: 0,\n                shadowOffset: { width: 5, height: 3 },\n                shadowColor: 'black',\n                shadowOpacity: 0.5,\n                elevation: 5\n              },\n              \n            }}\n          >\n            <Tab.Screen\n              name=\"Screen 1\"\n              component={FirstScreenNavigator}  // Replaced Screen 1\n              options  = { ({ navigation })=> {\n                const currentRoute = navigation.state\n                // const { routeName } = currentRoute;\n                \n                return{\n                  tabBarVisible: false,\n                  tabBarLabel: 'Home',\n                  tabBarIcon: ({ tintColor }) => (\n                    <Icon name=\"ios-list-box\" color={tintColor} size={24} />\n                  )\n                }      \n              }}\n            />\n            {/* <Tab.Screen\n              name=\"Screen 2\"\n              component={SecondScreenNavigator}  // Replaced Screen 2\n              options = \n              {\n                {\n                  tabBarLabel: 'SAVED',\n                  tabBarIcon: ({ tintColor }) => (\n                    <Icon name=\"ios-heart-outline\" color={tintColor} size={24} />\n                  )\n                }\n              }\n            />\n            <Tab.Screen\n              name=\"Screen 3\"\n              component={ThirdScreenNavigator}  // Replaced Screen 3\n              options = \n              {\n                {\n                  tabBarLabel: 'My Vibe',\n                  tabBarIcon: ({ tintColor }) => (\n                    <Image source={require('./assets/airbnb.png')} style={{ height: 24, width: 24, tintColor: tintColor }} />\n                  )\n                }\n              }\n            />\n            <Tab.Screen\n              name=\"Screen 4\"\n              component={ThirdScreenNavigator}  // Replaced Screen 3\n              options = \n              {\n                {\n                  tabBarLabel: 'Profile',\n                  tabBarIcon: ({ tintColor }) => (\n                    <Image source={require('./assets/airbnb.png')} style={{ height: 24, width: 24, tintColor: tintColor }} />\n                  )\n                }\n              }\n            /> */}\n          </Tab.Navigator>\n        </NavigationContainer>\n      </Provider>  \n    </>\n  );\n};\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}
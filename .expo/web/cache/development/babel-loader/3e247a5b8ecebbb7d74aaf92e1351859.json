{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/abubakarakram/development/projects/backup bar peakk/client/src/screens/MapScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport MapView, { PROVIDER_GOOGLE, Marker } from 'react-native-maps';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport BottomDrawer from \"../components/BottomDarawer\";\nimport { getAllBusiness } from \"../../redux/actions/Business\";\nimport { getfilteredBusiness } from \"../../redux/actions/Business\";\nimport { getVibe } from \"../../redux/actions/Vibe\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport StarRating from 'react-native-star-rating';\nimport Modal from \"../components/Modal\";\nvar Images = [{\n  uri: \"https://i.imgur.com/sNam9iJ.jpg\"\n}, {\n  uri: \"https://i.imgur.com/N7rlQYt.jpg\"\n}, {\n  uri: \"https://i.imgur.com/UDrH0wm.jpg\"\n}, {\n  uri: \"https://i.imgur.com/Ka8kNST.jpg\"\n}];\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar CARD_HEIGHT = height / 3;\nvar CARD_WIDTH = CARD_HEIGHT + 50;\n\nvar MapScreen = function (_React$Component) {\n  _inherits(MapScreen, _React$Component);\n\n  var _super = _createSuper(MapScreen);\n\n  function MapScreen(props) {\n    var _this;\n\n    _classCallCheck(this, MapScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getAllMarkers = function (filterBusinesses, vibe) {\n      var goodSpots = filterBusinesses.goodSpots,\n          badSpots = filterBusinesses.badSpots,\n          averageSpots = filterBusinesses.averageSpots;\n      var goodSpotMarkers = goodSpots.map(function (marker) {\n        return {\n          placeId: marker.place_id,\n          latitude: marker.geometry.location.lat,\n          longitude: marker.geometry.location.lng,\n          image: marker.hasOwnProperty('photos') ? \"https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=\" + marker.photos[0].photo_reference + \"&key=AIzaSyD9CLs9poEBtI_4CHd5Y8cSHklQPoCi6NM\" : 'https://c8.alamy.com/comp/P2D5P1/photo-not-available-vector-icon-isolated-on-transparent-background-photo-not-available-logo-concept-P2D5P1.jpg',\n          rating: marker.rating,\n          types: marker.types[0],\n          name: marker.name,\n          priceLevel: marker.price_level\n        };\n      });\n      var averageSpotMarkers = averageSpots.map(function (marker) {\n        return {\n          placeId: marker.place_id,\n          latitude: marker.geometry.location.lat,\n          longitude: marker.geometry.location.lng,\n          image: marker.hasOwnProperty('photos') ? \"https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=\" + marker.photos[0].photo_reference + \"&key=AIzaSyD9CLs9poEBtI_4CHd5Y8cSHklQPoCi6NM\" : 'https://c8.alamy.com/comp/P2D5P1/photo-not-available-vector-icon-isolated-on-transparent-background-photo-not-available-logo-concept-P2D5P1.jpg',\n          rating: marker.rating,\n          types: marker.types[0],\n          name: marker.name,\n          priceLevel: marker.price_level\n        };\n      });\n      var badSpotMarkers = badSpots.map(function (marker) {\n        return {\n          placeId: marker.place_id,\n          latitude: marker.geometry.location.lat,\n          longitude: marker.geometry.location.lng,\n          image: marker.hasOwnProperty('photos') ? \"https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=\" + marker.photos[0].photo_reference + \"&key=AIzaSyD9CLs9poEBtI_4CHd5Y8cSHklQPoCi6NM\" : 'https://c8.alamy.com/comp/P2D5P1/photo-not-available-vector-icon-isolated-on-transparent-background-photo-not-available-logo-concept-P2D5P1.jpg',\n          rating: marker.rating,\n          types: marker.types[0],\n          name: marker.name,\n          priceLevel: marker.price_level\n        };\n      });\n\n      _this.setState({\n        goodSpotMarkers: goodSpotMarkers,\n        averageSpotMarkers: averageSpotMarkers,\n        badSpotMarkers: badSpotMarkers,\n        allMarkers: goodSpotMarkers.concat(averageSpotMarkers, badSpotMarkers)\n      });\n    };\n\n    _this.renderDollar = function (priceLevel) {\n      var dollar = '';\n\n      for (var i = 0; i < priceLevel; i++) {\n        dollar = dollar + '$';\n      }\n\n      return dollar;\n    };\n\n    _this.selectSpecificBusiness = function () {\n      var marker = _this.state.selectedMarker.image ? _this.state.selectedMarker : _this.state.allMarkers[0];\n      var item = {\n        place_id: marker.placeId\n      };\n      var businesses = _this.props.business.business.businesses;\n      var selectedBusiness = businesses.filter(function (business) {\n        return business.placeId === item.place_id;\n      })[0];\n\n      _this.setState({\n        selectedItem: item,\n        showProfileModal: true,\n        selectedBusiness: selectedBusiness\n      });\n    };\n\n    _this.markerClick = function (marker, index) {\n      var selectedMarker = {\n        image: marker.image,\n        rating: marker.rating,\n        name: marker.name,\n        types: marker.types,\n        priceLevel: marker.priceLevel,\n        placeId: marker.placeId\n      };\n\n      _this.setState({\n        selectedMarker: selectedMarker\n      });\n    };\n\n    _this.state = {\n      goodSpotMarkers: [],\n      badSpotMarkers: [],\n      averageSpotMarkers: [],\n      allMarkers: [],\n      selectedMarker: {\n        image: '',\n        title: '',\n        rating: ''\n      },\n      showProfileModal: false,\n      selectedItem: {},\n      selectedBusiness: {}\n    };\n    return _this;\n  }\n\n  _createClass(MapScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var filterBusinesses = this.props.business.business.filterBusinesses;\n      var vibe = this.props.vibe.vibe.vibe;\n      this.getAllMarkers(filterBusinesses, vibe);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.index = 0;\n      this.animation = new Animated.Value(0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var route = this.props.route;\n      var category = route.params.category;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }\n      }, React.createElement(MapView, {\n        ref: function ref(map) {\n          return _this2.map = map;\n        },\n        provider: PROVIDER_GOOGLE,\n        style: styles.mapStyle,\n        initialRegion: {\n          latitude: this.state.allMarkers.length > 0 ? this.state.allMarkers[0].latitude : 102,\n          longitude: this.state.allMarkers.length > 0 ? this.state.allMarkers[0].longitude : -57,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, this.state.goodSpotMarkers.map(function (marker, index) {\n        return React.createElement(MapView.Marker, {\n          coordinate: {\n            latitude: marker.latitude,\n            longitude: marker.longitude\n          },\n          pinColor: \"green\",\n          onPress: function onPress(e) {\n            return _this2.markerClick(marker);\n          },\n          title: marker.title,\n          description: marker.description,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }\n        }, React.createElement(MapView.Callout, {\n          tooltip: true,\n          style: styles.customView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }\n        }, React.createElement(TouchableHighlight, {\n          onPress: function onPress() {\n            return _this2.markerClick(marker);\n          },\n          underlayColor: \"#dddddd\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: styles.calloutText,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }\n        }, marker.title, \"\\n\", marker.description)))));\n      }), this.state.averageSpotMarkers.map(function (marker) {\n        return React.createElement(MapView.Marker, {\n          coordinate: {\n            latitude: marker.latitude,\n            longitude: marker.longitude\n          },\n          pinColor: \"orange\",\n          onPress: function onPress(e) {\n            return _this2.markerClick(marker);\n          },\n          title: marker.title,\n          description: marker.description,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }\n        }, React.createElement(MapView.Callout, {\n          tooltip: true,\n          style: styles.customView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }\n        }, React.createElement(TouchableHighlight, {\n          onPress: function onPress() {\n            return _this2.markerClick(marker);\n          },\n          underlayColor: \"#dddddd\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: styles.calloutText,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }\n        }, marker.title, \"\\n\", marker.description)))));\n      }), this.state.badSpotMarkers.map(function (marker) {\n        return React.createElement(MapView.Marker, {\n          coordinate: {\n            latitude: marker.latitude,\n            longitude: marker.longitude\n          },\n          pinColor: \"red\",\n          onPress: function onPress(e) {\n            return _this2.markerClick(marker);\n          },\n          title: marker.title,\n          description: marker.description,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }\n        }, React.createElement(MapView.Callout, {\n          tooltip: true,\n          style: styles.customView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 19\n          }\n        }, React.createElement(TouchableHighlight, {\n          onPress: function onPress() {\n            return _this2.markerClick(marker);\n          },\n          underlayColor: \"#dddddd\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: styles.calloutText,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }\n        }, marker.title, \"\\n\", marker.description)))));\n      })), React.createElement(Animated.ScrollView, {\n        horizontal: true,\n        scrollEventThrottle: 1,\n        showsHorizontalScrollIndicator: false,\n        snapToInterval: CARD_WIDTH,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              x: this.animation\n            }\n          }\n        }], {\n          useNativeDriver: true\n        }),\n        style: styles.scrollView,\n        contentContainerStyle: styles.endPadding,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 9\n        }\n      }, this.state.allMarkers.length > 0 && React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.selectSpecificBusiness();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: [styles.card, {\n          flexDirection: 'row',\n          alignItems: 'center',\n          width: width * 0.9,\n          height: height * 0.15\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          height: '100%',\n          borderWidth: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 19\n        }\n      }, React.createElement(Image, {\n        style: styles.cardImage,\n        source: {\n          uri: this.state.selectedMarker.image ? this.state.selectedMarker.image : this.state.allMarkers[0].image\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'flex-start',\n          paddingLeft: 10,\n          paddingTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: [{\n          fontSize: 20,\n          color: '#b63838',\n          marginBottom: 2\n        }, styles.textInfo],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }\n      }, this.state.selectedMarker.types ? this.state.selectedMarker.types : this.state.allMarkers[0].types), React.createElement(Text, {\n        style: [{\n          fontSize: 16,\n          fontWeight: 'bold'\n        }, styles.textInfo],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }\n      }, this.state.selectedMarker.name ? this.state.selectedMarker.name : this.state.allMarkers[0].name), React.createElement(Text, {\n        style: [{\n          fontSize: 12,\n          marginBottom: 4\n        }, styles.textInfo],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }\n      }, this.state.selectedMarker.priceLevel > 0 || this.state.allMarkers[0].priceLevel > 0 ? this.renderDollar(this.state.selectedMarker.priceLevel ? this.state.selectedMarker.priceLevel : this.state.allMarkers[0].priceLevel) : \"Price not available\"), React.createElement(StarRating, {\n        disable: true,\n        maxStars: 5,\n        rating: this.state.selectedMarker.rating ? this.state.selectedMarker.rating : this.state.allMarkers[0].rating,\n        starSize: 10,\n        starStyle: {\n          color: '#ffbf00'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }\n      }))))), React.createElement(Text, {\n        style: {\n          color: 'black'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 9\n        }\n      }, \"sdfsdsss\"), React.createElement(BottomDrawer, {\n        category: category,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 9\n        }\n      }), this.state.showProfileModal && React.createElement(Modal, {\n        item: this.state.selectedItem,\n        businessData: this.state.selectedBusiness,\n        show: this.state.showProfileModal,\n        closeModal: function closeModal() {\n          _this2.setState({\n            showProfileModal: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 42\n        }\n      }));\n    }\n  }]);\n\n  return MapScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  },\n  mapStyle: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height * 0.85\n  },\n  scrollView: {\n    position: \"absolute\",\n    bottom: '6%',\n    left: 0,\n    right: 0,\n    paddingVertical: 10\n  },\n  endPadding: {\n    paddingRight: width - CARD_WIDTH\n  },\n  card: {\n    padding: 0,\n    elevation: 2,\n    backgroundColor: \"#FFF\",\n    marginHorizontal: 20,\n    shadowColor: \"#000\",\n    shadowRadius: 5,\n    shadowOpacity: 0.3,\n    shadowOffset: {\n      x: 2,\n      y: -2\n    },\n    height: CARD_HEIGHT,\n    width: CARD_WIDTH,\n    overflow: \"hidden\",\n    marginBottom: 30,\n    borderRadius: 10,\n    borderWidth: 0.3\n  },\n  cardImage: {\n    flex: 1,\n    width: \"100%\",\n    height: \"50%\"\n  },\n  textContent: {\n    flex: 1\n  },\n  cardtitle: {\n    fontSize: 12,\n    marginTop: 5,\n    fontWeight: \"bold\"\n  },\n  cardDescription: {\n    fontSize: 12,\n    color: \"#444\"\n  },\n  markerWrap: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  marker: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: \"rgba(130,4,150, 0.9)\"\n  },\n  ring: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    backgroundColor: \"rgba(130,4,150, 0.3)\",\n    position: \"absolute\",\n    borderWidth: 1,\n    borderColor: \"rgba(130,4,150, 0.5)\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var business = state.business,\n      vibe = state.vibe;\n  return {\n    business: business,\n    vibe: vibe\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getAllBusiness: getAllBusiness,\n    getfilteredBusiness: getfilteredBusiness,\n    getVibe: getVibe\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapScreen);","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/src/screens/MapScreen.js"],"names":["React","MapView","PROVIDER_GOOGLE","Marker","BottomDrawer","getAllBusiness","getfilteredBusiness","getVibe","connect","bindActionCreators","StarRating","Modal","Images","uri","Dimensions","get","width","height","CARD_HEIGHT","CARD_WIDTH","MapScreen","props","getAllMarkers","filterBusinesses","vibe","goodSpots","badSpots","averageSpots","goodSpotMarkers","map","marker","placeId","place_id","latitude","geometry","location","lat","longitude","lng","image","hasOwnProperty","photos","photo_reference","rating","types","name","priceLevel","price_level","averageSpotMarkers","badSpotMarkers","setState","allMarkers","concat","renderDollar","dollar","i","selectSpecificBusiness","state","selectedMarker","item","businesses","business","selectedBusiness","filter","selectedItem","showProfileModal","markerClick","index","title","animation","Animated","Value","route","category","params","styles","container","mapStyle","length","latitudeDelta","longitudeDelta","e","description","customView","calloutText","event","nativeEvent","contentOffset","x","useNativeDriver","scrollView","endPadding","card","flexDirection","alignItems","flex","borderWidth","cardImage","paddingLeft","paddingTop","fontSize","color","marginBottom","textInfo","fontWeight","Component","StyleSheet","create","backgroundColor","justifyContent","position","bottom","left","right","paddingVertical","paddingRight","padding","elevation","marginHorizontal","shadowColor","shadowRadius","shadowOpacity","shadowOffset","y","overflow","borderRadius","textContent","cardtitle","marginTop","cardDescription","markerWrap","ring","borderColor","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MapView, {PROVIDER_GOOGLE, Marker} from 'react-native-maps';\nimport { View, Text, StyleSheet, Dimensions, Animated,Image,AppRegistry, ScrollView, TouchableHighlight, TouchableOpacity } from 'react-native';\nimport BottomDrawer from '../components/BottomDarawer';\nimport {getAllBusiness} from '../../redux/actions/Business';\nimport {getfilteredBusiness} from '../../redux/actions/Business';\nimport {getVibe} from '../../redux/actions/Vibe';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport StarRating from 'react-native-star-rating'\nimport Modal from '../components/Modal';\n\nconst Images = [\n  { uri: \"https://i.imgur.com/sNam9iJ.jpg\" },\n  { uri: \"https://i.imgur.com/N7rlQYt.jpg\" },\n  { uri: \"https://i.imgur.com/UDrH0wm.jpg\" },\n  { uri: \"https://i.imgur.com/Ka8kNST.jpg\" }\n]\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst CARD_HEIGHT = height / 3;\nconst CARD_WIDTH = CARD_HEIGHT + 50;\n\nclass MapScreen extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      goodSpotMarkers:[],\n      badSpotMarkers:[],\n      averageSpotMarkers: [],\n      allMarkers: [],\n      selectedMarker: {\n        image: '',\n        title: '',\n        rating: ''\n      },\n      showProfileModal: false,\n      selectedItem: {},\n      selectedBusiness: {}\n    }\n  }\n\n  getAllMarkers = (filterBusinesses, vibe) => {\n    \n    const { goodSpots, badSpots, averageSpots } = filterBusinesses;\n\n    const goodSpotMarkers = goodSpots.map((marker)=>{\n      return {\n        placeId: marker.place_id,\n        latitude: marker.geometry.location.lat,\n        longitude: marker.geometry.location.lng,\n        image:  marker.hasOwnProperty('photos') ? `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${ marker.photos[0].photo_reference}&key=AIzaSyD9CLs9poEBtI_4CHd5Y8cSHklQPoCi6NM`: 'https://c8.alamy.com/comp/P2D5P1/photo-not-available-vector-icon-isolated-on-transparent-background-photo-not-available-logo-concept-P2D5P1.jpg',\n        rating: marker.rating,\n        types: marker.types[0],\n        name: marker.name,\n        priceLevel: marker.price_level\n      }\n    });\n\n    const averageSpotMarkers = averageSpots.map((marker)=>{\n      return {\n        placeId: marker.place_id,\n        latitude: marker.geometry.location.lat,\n        longitude: marker.geometry.location.lng,\n        image: marker.hasOwnProperty('photos') ? `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${ marker.photos[0].photo_reference}&key=AIzaSyD9CLs9poEBtI_4CHd5Y8cSHklQPoCi6NM`: 'https://c8.alamy.com/comp/P2D5P1/photo-not-available-vector-icon-isolated-on-transparent-background-photo-not-available-logo-concept-P2D5P1.jpg',\n        rating: marker.rating,\n        types: marker.types[0],\n        name: marker.name,\n        priceLevel: marker.price_level\n      }\n    });\n\n    const badSpotMarkers = badSpots.map((marker)=>{\n      return {\n        placeId: marker.place_id,\n        latitude: marker.geometry.location.lat,\n        longitude: marker.geometry.location.lng,\n        image: marker.hasOwnProperty('photos') ? `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${ marker.photos[0].photo_reference}&key=AIzaSyD9CLs9poEBtI_4CHd5Y8cSHklQPoCi6NM`: 'https://c8.alamy.com/comp/P2D5P1/photo-not-available-vector-icon-isolated-on-transparent-background-photo-not-available-logo-concept-P2D5P1.jpg',\n        rating: marker.rating,\n        types: marker.types[0],\n        name: marker.name,\n        priceLevel: marker.price_level\n      }\n    });\n    \n    \n    this.setState({ \n      goodSpotMarkers,\n      averageSpotMarkers,\n      badSpotMarkers,  \n      allMarkers: goodSpotMarkers.concat(averageSpotMarkers, badSpotMarkers)\n    })\n  }\n\n  renderDollar = (priceLevel) => {\n    let dollar = '';\n    for(let i=0 ; i< priceLevel; i++){\n      dollar = dollar + '$'; \n    }\n    return dollar;\n  }\n\n  componentDidMount(){\n    const { filterBusinesses } = this.props.business.business;\n    const { vibe } = this.props.vibe.vibe;\n\n    // const route = this.props.route;\n    // const {businessData} = route.params;\n    this.getAllMarkers(filterBusinesses, vibe)\n  }\n\n  selectSpecificBusiness = () => {\n    const marker = this.state.selectedMarker.image ? this.state.selectedMarker : this.state.allMarkers[0]\n    const item = {\n      place_id: marker.placeId\n    };\n    const { businesses } = this.props.business.business;\n    const selectedBusiness = businesses.filter( (business) => business.placeId === item.place_id )[0]\n    this.setState({ selectedItem: item, showProfileModal: true, selectedBusiness });\n  }\n\n\n  componentWillMount() {\n    this.index = 0;\n    this.animation = new Animated.Value(0);\n  }\n\n  markerClick = (marker, index) => {\n    let selectedMarker = {\n      image: marker.image,\n      rating: marker.rating,\n      name: marker.name,\n      types: marker.types,\n      priceLevel: marker.priceLevel,\n      placeId: marker.placeId\n    }\n    this.setState({ selectedMarker })\n  }\n\n  render(){\n    const route = this.props.route;\n    const {category} = route.params\n    return(\n      <View style={styles.container}>\n        <MapView\n          ref={map => this.map = map}\n          provider = {PROVIDER_GOOGLE}\n          style={styles.mapStyle} \n          initialRegion={{\n           latitude: this.state.allMarkers.length > 0 ? this.state.allMarkers[0].latitude: 102,\n           longitude: this.state.allMarkers.length > 0 ? this.state.allMarkers[0].longitude: -57,\n           latitudeDelta: 0.0922,\n           longitudeDelta: 0.0421,\n          }}\n        >\n        { \n          this.state.goodSpotMarkers.map((marker, index)=>{\n            return(\n              <MapView.Marker\n                coordinate={{ \n                  latitude: marker.latitude,\n                  longitude: marker.longitude,\n                 }}\n                pinColor = \"green\" \n                onPress={e => this.markerClick(marker)}\n                // onCalloutPress={()=>this.markerClick(marker)}\n                title={marker.title}\n                description={marker.description}>\n                  <MapView.Callout tooltip style={styles.customView}>\n                    <TouchableHighlight onPress= {()=>this.markerClick(marker)} underlayColor='#dddddd'>\n                        <View style={styles.calloutText}>\n                            <Text>{marker.title}{\"\\n\"}{marker.description}</Text>\n                        </View>\n                    </TouchableHighlight>\n                  </MapView.Callout>\n              </MapView.Marker>\n            );\n          })\n        }\n        { \n          this.state.averageSpotMarkers.map((marker)=>{\n            return( \n              <MapView.Marker\n                coordinate={{ \n                  latitude: marker.latitude,\n                  longitude: marker.longitude,\n                 }}\n                pinColor = \"orange\" \n                onPress={e => this.markerClick(marker)}\n                // onCalloutPress={()=>this.markerClick(marker)}\n                title={marker.title}\n                description={marker.description}>\n                  <MapView.Callout tooltip style={styles.customView}>\n                    <TouchableHighlight onPress= {()=>this.markerClick(marker)} underlayColor='#dddddd'>\n                        <View style={styles.calloutText}>\n                            <Text>{marker.title}{\"\\n\"}{marker.description}</Text>\n                        </View>\n                    </TouchableHighlight>\n                  </MapView.Callout>\n              </MapView.Marker>\n            );\n          })\n        }\n         { \n          this.state.badSpotMarkers.map((marker)=>{\n            return( \n              <MapView.Marker\n                coordinate={{ \n                  latitude: marker.latitude,\n                  longitude: marker.longitude,\n                 }}\n                pinColor = \"red\" \n                onPress={e => this.markerClick(marker)}\n                // onCalloutPress={()=>this.markerClick(marker)}\n                title={marker.title}\n                description={marker.description}>\n                  <MapView.Callout tooltip style={styles.customView}>\n                    <TouchableHighlight onPress= {()=>this.markerClick(marker)} underlayColor='#dddddd'>\n                        <View style={styles.calloutText}>\n                            <Text>{marker.title}{\"\\n\"}{marker.description}</Text>\n                        </View>\n                    </TouchableHighlight>\n                  </MapView.Callout>\n              </MapView.Marker>\n            );\n          })\n        }    \n        </MapView>\n        <Animated.ScrollView\n          horizontal\n          scrollEventThrottle={1}\n          showsHorizontalScrollIndicator={false}\n          snapToInterval={CARD_WIDTH}\n          onScroll={Animated.event(\n            [\n              {\n                nativeEvent: {\n                  contentOffset: {\n                    x: this.animation,\n                  },\n                },\n              },\n            ],\n            { useNativeDriver: true }\n          )}\n          style={styles.scrollView}\n          contentContainerStyle={styles.endPadding}\n        >\n          \n            {/* <View style={styles.card} key={\"2\"}>\n              <Image\n                source={ { uri: this.state.selectedMarker.image } }\n                style={styles.cardImage}\n                resizeMode=\"cover\"\n              />\n              <View style={styles.textContent}>\n                <Text numberOfLines={1} style={styles.cardtitle}>{\"as\"}</Text>\n                <Text numberOfLines={1} style={styles.cardDescription}>\n                  {\"asdas\"}\n                </Text>\n              </View>\n            </View> */}\n            { this.state.allMarkers.length > 0 &&\n              <TouchableOpacity\n                onPress = {()=>{ \n                this.selectSpecificBusiness()\n                }\n              }>\n                <View style={[styles.card, {  flexDirection: 'row',alignItems: 'center' ,width: width * 0.9, height: height * 0.15 }]}>\n                  <View style={{ flex: 1 , height: '100%', borderWidth: 1}}>\n                    <Image\n                      style={styles.cardImage}\n                      source={ { uri: this.state.selectedMarker.image ? this.state.selectedMarker.image : this.state.allMarkers[0].image } } \n                    />\n                  </View>\n                  <View style={{ flex: 1, alignItems: 'flex-start', paddingLeft: 10, paddingTop: 10 }}>\n                    <Text style={[{ fontSize: 20, color: '#b63838', marginBottom: 2 }, styles.textInfo]}>{this.state.selectedMarker.types ? this.state.selectedMarker.types : this.state.allMarkers[0].types }</Text> \n                    <Text style={[{ fontSize: 16, fontWeight: 'bold' }, styles.textInfo]}>{this.state.selectedMarker.name ? this.state.selectedMarker.name : this.state.allMarkers[0].name }</Text>\n                    <Text style={[{ fontSize: 12,  marginBottom: 4 }, styles.textInfo]} >{this.state.selectedMarker.priceLevel > 0 || this.state.allMarkers[0].priceLevel > 0 ?  this.renderDollar(this.state.selectedMarker.priceLevel ? this.state.selectedMarker.priceLevel : this.state.allMarkers[0].priceLevel) : \"Price not available\" }</Text> \n                    <StarRating\n                      disable={true}\n                      maxStars={5}\n                      rating={this.state.selectedMarker.rating ? this.state.selectedMarker.rating : this.state.allMarkers[0].rating }\n                      starSize={10}\n                      starStyle = {{ color:'#ffbf00' }}\n                    />\n                  </View>\n                </View>\n              </TouchableOpacity>\n            }  \n            \n        </Animated.ScrollView> \n        <Text style = {{color: 'black'}} >sdfsdsss</Text>\n        <BottomDrawer category = {category}  />\n        { this.state.showProfileModal && <Modal  item  = {this.state.selectedItem}  businessData = {this.state.selectedBusiness}  show = {this.state.showProfileModal} closeModal = {()=> { this.setState({ showProfileModal: false }) }} />  } \n      </View>\n    )\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n  },\n  mapStyle: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height * 0.85,\n  },\n  scrollView: {\n    position: \"absolute\",\n    bottom: '6%',\n    left: 0,\n    right: 0,\n    paddingVertical: 10,\n  },\n  endPadding: {\n    paddingRight: width - CARD_WIDTH,\n  },\n  card: {\n    padding: 0,\n    elevation: 2,\n    backgroundColor: \"#FFF\",\n    marginHorizontal: 20,\n    shadowColor: \"#000\",\n    shadowRadius: 5,\n    shadowOpacity: 0.3,\n    shadowOffset: { x: 2, y: -2 },\n    height: CARD_HEIGHT,\n    width: CARD_WIDTH,\n    overflow: \"hidden\",\n    marginBottom: 30,\n    borderRadius: 10,\n    borderWidth: 0.3\n  },\n  cardImage: {\n    flex: 1,\n    width: \"100%\",\n    height: \"50%\"\n  },\n  textContent: {\n    flex: 1,\n  },\n  cardtitle: {\n    fontSize: 12,\n    marginTop: 5,\n    fontWeight: \"bold\",\n  },\n  cardDescription: {\n    fontSize: 12,\n    color: \"#444\",\n  },\n  markerWrap: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  marker: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: \"rgba(130,4,150, 0.9)\",\n  },\n  ring: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    backgroundColor: \"rgba(130,4,150, 0.3)\",\n    position: \"absolute\",\n    borderWidth: 1,\n    borderColor: \"rgba(130,4,150, 0.5)\",\n  }\n});\n\nconst mapStateToProps = (state) => {\n  const { business, vibe } = state\n  return { \n    business: business,\n    vibe: vibe\n  }\n};\nconst mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    getAllBusiness,\n    getfilteredBusiness,\n    getVibe\n  }, dispatch)\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapScreen);"]},"metadata":{},"sourceType":"module"}
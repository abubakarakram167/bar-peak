{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Update_Radius, Fetch_User, SET_LOCATION, update_User, Progression_Bar } from \"../types\";\nimport { graphql, stripIgnoredCharacters } from 'graphql';\nimport axios from \"../../src/api/axios\";\nimport { getUserData, storeUserData } from \"../../src/components/localStorage\";\nexport var updateRadius = function updateRadius(radius) {\n  return function _callee(dispatch, getState) {\n    var _await$getUserData, token, body, res;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getUserData());\n\n          case 2:\n            _await$getUserData = _context.sent;\n            token = _await$getUserData.token;\n            body = {\n              query: \"\\n      mutation{\\n        updateRadius(radius: \" + parseInt(radius) + \"){\\n            firstName\\n            radius\\n            lastName\\n            email\\n            dob\\n        }\\n      }\\n      \"\n            };\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(axios.post(\"graphql?\", body, {\n              headers: {\n                'Authorization': \"Bearer \" + token\n              }\n            }));\n\n          case 8:\n            res = _context.sent;\n            dispatch({\n              type: Update_Radius,\n              payload: res.data.data.updateRadius.radius\n            });\n            return _context.abrupt(\"return\", Promise.resolve('ok'));\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](5);\n            console.log(\"hte errorsss\", _context.t0.response.data);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 13]], Promise);\n  };\n};\nexport var getUser = function getUser() {\n  return function _callee2(dispatch, getState) {\n    var _await$getUserData2, token, body, res;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getUserData());\n\n          case 2:\n            _await$getUserData2 = _context2.sent;\n            token = _await$getUserData2.token;\n            body = {\n              query: \"\\n      query{\\n        getUser{\\n            _id\\n            firstName\\n            lastName\\n            email\\n            dob\\n            radius\\n            profilePic\\n            gender\\n            accountType,\\n            phoneNumber\\n        }\\n      }\\n    \"\n            };\n            _context2.prev = 5;\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(axios.post(\"graphql?\", body, {\n              headers: {\n                'Authorization': \"Bearer \" + token\n              }\n            }));\n\n          case 8:\n            res = _context2.sent;\n            dispatch({\n              type: Fetch_User,\n              payload: res.data.data.getUser\n            });\n            return _context2.abrupt(\"return\", Promise.resolve('ok'));\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](5);\n            console.log(\"hte errorsss\", _context2.t0.response.data);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[5, 13]], Promise);\n  };\n};\nexport var updateUser = function updateUser(_ref) {\n  var email = _ref.email,\n      firstName = _ref.firstName,\n      lastName = _ref.lastName,\n      password = _ref.password,\n      date = _ref.date,\n      gender = _ref.gender,\n      profilePic = _ref.profilePic;\n  return function _callee3(dispatch, getState) {\n    var _await$getUserData3, token, body, res, errors, message;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(getUserData());\n\n          case 2:\n            _await$getUserData3 = _context3.sent;\n            token = _await$getUserData3.token;\n            console.log(email + \", \" + firstName + \", \" + lastName + \", \" + password + \", \" + date + \", \" + gender);\n            body = {\n              query: \"\\n    mutation{\\n      updateUser(userInput: {email: \\\"\" + email + \"\\\",\\n      profilePic: \\\"\" + profilePic + \"\\\",\\n      firstName: \\\"\" + firstName + \"\\\", lastName: \\\"\" + lastName + \"\\\", \\n      password: \\\"\" + password + \"\\\", dob: \\\"\" + date + \"\\\",  gender: \\\"\" + gender + \"\\\"})\\n      {\\n        user{\\n          _id\\n          firstName\\n          radius\\n          lastName\\n          email\\n          dob\\n          accountType\\n          profilePic\\n          gender\\n        }\\n        isPasswordChange\\n      }\\n    }\\n    \"\n            };\n            _context3.prev = 6;\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(axios.post('graphql?', body, {\n              headers: {\n                'Authorization': \"Bearer \" + token\n              }\n            }));\n\n          case 9:\n            res = _context3.sent;\n            console.log(\"after update\", res.data.data);\n\n            if (res.data.data.updateUser) {\n              dispatch({\n                type: update_User,\n                payload: res.data.data.updateUser.user\n              });\n              console.log(\"the is paswword chane\", res.data.data.updateUser.isPasswordChange);\n            }\n\n            return _context3.abrupt(\"return\", res.data.data.updateUser.isPasswordChange);\n\n          case 15:\n            _context3.prev = 15;\n            _context3.t0 = _context3[\"catch\"](6);\n            console.log(\"the erororr\", _context3.t0.response.data);\n            errors = _context3.t0.response.data.errors;\n            message = errors[0].message;\n            return _context3.abrupt(\"return\", Promise.reject(message));\n\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[6, 15]], Promise);\n  };\n};\nexport var setUserLocation = function setUserLocation(data) {\n  return function _callee4(dispatch, getState) {\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            dispatch({\n              type: SET_LOCATION,\n              payload: _objectSpread(_objectSpread({}, data), {}, {\n                latitude: data.latitude.toFixed(5),\n                longitude: data.longitude.toFixed(5)\n              })\n            });\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var setProgressionBar = function setProgressionBar(data) {\n  return function _callee5(dispatch, getState) {\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            console.log(\"the bar\", data);\n            dispatch({\n              type: Progression_Bar,\n              payload: data\n            });\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/redux/actions/User.js"],"names":["Update_Radius","Fetch_User","SET_LOCATION","update_User","Progression_Bar","graphql","stripIgnoredCharacters","axios","getUserData","storeUserData","updateRadius","radius","dispatch","getState","token","body","query","parseInt","post","headers","res","type","payload","data","Promise","resolve","console","log","response","getUser","updateUser","email","firstName","lastName","password","date","gender","profilePic","user","isPasswordChange","errors","message","reject","setUserLocation","latitude","toFixed","longitude","setProgressionBar"],"mappings":"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","sourcesContent":["import { Update_Radius, Fetch_User, SET_LOCATION, update_User, Progression_Bar, } from '../types'; \nimport { graphql, stripIgnoredCharacters } from 'graphql';\nimport axios from '../../src/api/axios';\nimport { getUserData , storeUserData} from '../../src/components/localStorage'; \n\nexport const updateRadius = (radius) => async (dispatch, getState) => {\n  const { token } = await getUserData();\n  const body = {\n      query:`\n      mutation{\n        updateRadius(radius: ${ parseInt(radius)}){\n            firstName\n            radius\n            lastName\n            email\n            dob\n        }\n      }\n      `\n    }\n  try{  \n    const res = await axios.post(`graphql?`,body,{ headers: {\n      'Authorization': `Bearer ${token}`\n    } });\n    dispatch({\n      type: Update_Radius,\n      payload: res.data.data.updateRadius.radius,\n    })\n    return Promise.resolve('ok');\n  }catch(err){\n    console.log(\"hte errorsss\", err.response.data)\n  }\n}\n\nexport const getUser = () => async (dispatch, getState) => {\n  const { token } = await getUserData();\n  const body = {\n    query:`\n      query{\n        getUser{\n            _id\n            firstName\n            lastName\n            email\n            dob\n            radius\n            profilePic\n            gender\n            accountType,\n            phoneNumber\n        }\n      }\n    ` \n  }\n  try{  \n    const res = await axios.post(`graphql?`,body,{ headers: {\n      'Authorization': `Bearer ${token}`\n    } });\n    dispatch({\n      type: Fetch_User,\n      payload: res.data.data.getUser,\n    })\n    return Promise.resolve('ok');\n  }catch(err){\n    console.log(\"hte errorsss\", err.response.data)\n  }\n}\n\nexport const updateUser = ({email, firstName, lastName, password, date, gender, profilePic}) => async (dispatch, getState) => {\n  const { token } = await getUserData();\n  console.log(`${email}, ${firstName}, ${lastName}, ${password}, ${date}, ${gender}`);\n    \n  const body = {\n    query: `\n    mutation{\n      updateUser(userInput: {email: \"${email}\",\n      profilePic: \"${profilePic}\",\n      firstName: \"${firstName}\", lastName: \"${lastName}\", \n      password: \"${password}\", dob: \"${date}\",  gender: \"${gender}\"})\n      {\n        user{\n          _id\n          firstName\n          radius\n          lastName\n          email\n          dob\n          accountType\n          profilePic\n          gender\n        }\n        isPasswordChange\n      }\n    }\n    `\n  }\n  try{\n  const res = await axios.post('graphql?',body,{ headers: {\n    'Authorization': `Bearer ${token}`\n  }})\n    console.log(\"after update\", res.data.data);\n    if(res.data.data.updateUser){\n      dispatch({\n        type: update_User,\n        payload: res.data.data.updateUser.user,\n      })\n      console.log(\"the is paswword chane\", res.data.data.updateUser.isPasswordChange)\n    }\n    return (res.data.data.updateUser.isPasswordChange) \n  }\n  catch(err){\n    console.log(\"the erororr\", err.response.data)\n    const { errors } = err.response.data;\n    const { message } = errors[0];\n    return Promise.reject(message) \n  }\n}\n\nexport const setUserLocation = (data) => async (dispatch, getState) => {\n  dispatch({\n    type: SET_LOCATION,\n    payload: {...data,\n      latitude: data.latitude.toFixed(5),\n      longitude: data.longitude.toFixed(5) \n    }\n  })\n}\nexport const setProgressionBar = (data) => async (dispatch, getState) => {\n  console.log(\"the bar\", data)\n  dispatch({\n    type: Progression_Bar,\n    payload: data\n  })\n}\n\n"]},"metadata":{},"sourceType":"module"}
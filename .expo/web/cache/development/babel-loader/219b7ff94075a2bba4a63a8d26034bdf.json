{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/abubakarakram/development/projects/backup bar peakk/client/src/screens/MyFavourites.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport MyFavouritesTile from \"../components/MyfavouriteTile\";\nimport { connect } from 'react-redux';\n\nvar MyFavourites = function (_React$Component) {\n  _inherits(MyFavourites, _React$Component);\n\n  var _super = _createSuper(MyFavourites);\n\n  function MyFavourites() {\n    var _this;\n\n    _classCallCheck(this, MyFavourites);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getBusinessCategories = function (category) {\n      return category.map(function (category) {\n        return category.type;\n      });\n    };\n\n    _this.getBusinessCategoriesId = function (category) {\n      return category.map(function (category) {\n        return category._id;\n      });\n    };\n\n    _this.getTotalCategoryFavourites = function (singleCategory) {\n      var favouriteEstablishments = _this.props.favouriteEstablishments;\n\n      if (singleCategory.title === \"Bar\") {\n        return favouriteEstablishments.filter(function (business) {\n          return _this.getBusinessCategories(business.category).includes(\"sub_bar\");\n        });\n      } else {\n        return favouriteEstablishments.filter(function (business) {\n          return _this.getBusinessCategoriesId(business.category).includes(singleCategory._id);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(MyFavourites, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          navigation = _this$props.navigation,\n          category = _this$props.category,\n          favouriteEstablishments = _this$props.favouriteEstablishments;\n      console.log(\"here the favourite establishments\", favouriteEstablishments);\n      return React.createElement(View, {\n        style: styles.screen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.favouritesText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, \"Favourites\")), React.createElement(View, {\n        style: {\n          flex: 3\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, category.map(function (category) {\n        if (category.type === \"main_category\") return React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            navigation.navigate(\"SpecificCategoryFavourites\", {\n              categoryFavourite: _this2.getTotalCategoryFavourites(category),\n              category: category\n            });\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }\n        }, React.createElement(MyFavouritesTile, {\n          key: category._id,\n          category: category,\n          totalFavourites: _this2.getTotalCategoryFavourites(category).length,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 23\n          }\n        }));\n      }))));\n    }\n  }]);\n\n  return MyFavourites;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var category = state.category,\n      business = state.business;\n  return {\n    category: category.category.category,\n    favouriteEstablishments: business.business.favouriteBusiness\n  };\n};\n\nexport default connect(mapStateToProps, null)(MyFavourites);\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  favouritesText: {\n    color: \"black\",\n    fontSize: 30,\n    marginLeft: \"5%\",\n    fontWeight: \"500\"\n  },\n  favouriteTile: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  completeTile: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/src/screens/MyFavourites.js"],"names":["React","MyFavouritesTile","connect","MyFavourites","getBusinessCategories","category","map","type","getBusinessCategoriesId","_id","getTotalCategoryFavourites","singleCategory","favouriteEstablishments","props","title","filter","business","includes","navigation","console","log","styles","screen","flex","justifyContent","favouritesText","navigate","categoryFavourite","length","Component","mapStateToProps","state","favouriteBusiness","StyleSheet","create","backgroundColor","height","color","fontSize","marginLeft","fontWeight","favouriteTile","flexDirection","completeTile"],"mappings":"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","sourcesContent":["// Screen1.js\nimport React from 'react'                                       \nimport { StyleSheet, Text, View, ScrollView, TouchableOpacity } from 'react-native' \nimport MyFavouritesTile from '../components/MyfavouriteTile';\nimport { connect } from 'react-redux';\n\nclass MyFavourites extends React.Component {\n\n  getBusinessCategories = (category) => {\n    return category.map(category => {\n      return category.type;\n    })\n  }\n  getBusinessCategoriesId = (category) => {\n    return category.map(category => {\n      return category._id;\n    })\n  }  \n\n  getTotalCategoryFavourites = (singleCategory) => {\n    const { favouriteEstablishments } = this.props;\n    \n      if(singleCategory.title === \"Bar\"){\n        return favouriteEstablishments.filter((business)=>{ \n          return this.getBusinessCategories(business.category).includes(\"sub_bar\")         \n        })\n      }\n      else{\n        return favouriteEstablishments.filter((business)=>{ \n          return this.getBusinessCategoriesId(business.category).includes(singleCategory._id)         \n        })\n      }\n    \n  }\n\n  render(){\n    const { navigation, category, favouriteEstablishments } = this.props;\n    console.log(\"here the favourite establishments\", favouriteEstablishments);\n    return(\n      <View style={styles.screen}>\n        <View\n          style = {{ flex:1, justifyContent: 'center' }}\n        >\n          <Text\n            style = { styles.favouritesText }\n          >\n            Favourites\n          </Text>\n        </View>\n        <View\n          style = {{ flex: 3 }}\n        >\n          <ScrollView>\n            { \n              category.map((category)=>{\n                if(category.type === \"main_category\")\n                  return (\n                    <TouchableOpacity\n                      onPress = {()=> { \n                        navigation.navigate(\"SpecificCategoryFavourites\",{ \n                          categoryFavourite: this.getTotalCategoryFavourites(category),\n                          category: category \n                        })\n                      }}\n                    >\n                      <MyFavouritesTile \n                        key = {category._id}\n                        category = {category}\n                        totalFavourites = { this.getTotalCategoryFavourites(category).length } \n                      />   \n                    </TouchableOpacity>  \n                  )\n              })\n            }\n          </ScrollView>    \n        </View>\n       \n        \n      </View>\n    )\n  }\n}             \n\nconst mapStateToProps = (state) => {\n  const { category, business} = state\n  return { \n    category: category.category.category,\n    favouriteEstablishments: business.business.favouriteBusiness\n  }\n};\n\n\nexport default connect(mapStateToProps, null)(MyFavourites);\n\nconst styles = StyleSheet.create({  \n  screen:{ \n    flex:1, \n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  favouritesText: {\n    color: \"black\",\n    fontSize: 30,\n    marginLeft: \"5%\",\n    fontWeight: \"500\"\n  },\n  favouriteTile: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  completeTile : {\n    flex: 1\n  }\n                                                                   \n})"]},"metadata":{},"sourceType":"module"}
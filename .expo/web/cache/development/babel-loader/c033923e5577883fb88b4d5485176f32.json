{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport { Update_Radius, Fetch_User, SET_LOCATION, update_User, Progression_Bar } from \"../types\";\nvar INITIAL_STATE = {\n  user: {},\n  location: {},\n  radius: 0,\n  progressBar: 0\n};\n\nvar userReducer = function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Update_Radius:\n      console.log(\"in radiuss reducer\", action.payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        radius: action.payload\n      });\n\n    case Fetch_User:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload,\n        radius: action.payload.radius\n      });\n\n    case update_User:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload\n      });\n\n    case SET_LOCATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        location: action.payload\n      });\n\n    case Progression_Bar:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        progressBar: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  user: userReducer\n});","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/redux/reducers/User.js"],"names":["combineReducers","Update_Radius","Fetch_User","SET_LOCATION","update_User","Progression_Bar","INITIAL_STATE","user","location","radius","progressBar","userReducer","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,YAApC,EAAmDC,WAAnD,EAAgEC,eAAhE;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAC,EADe;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,MAAM,EAAE,CAHY;AAIpBC,EAAAA,WAAW,EAAE;AAJO,CAAtB;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BN,aAA0B;AAAA,MAAXO,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,aAAL;AACEc,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,MAAM,CAACI,OAAzC;AACA,6CACKL,KADL;AAEEH,QAAAA,MAAM,EAAEI,MAAM,CAACI;AAFjB;;AAIF,SAAKf,UAAL;AACE,6CACKU,KADL;AAEEL,QAAAA,IAAI,EAAEM,MAAM,CAACI,OAFf;AAGER,QAAAA,MAAM,EAAEI,MAAM,CAACI,OAAP,CAAeR;AAHzB;;AAKF,SAAKL,WAAL;AACE,6CACKQ,KADL;AAEEL,QAAAA,IAAI,EAAEM,MAAM,CAACI;AAFf;;AAIF,SAAKd,YAAL;AACE,6CACKS,KADL;AAEEJ,QAAAA,QAAQ,EAAEK,MAAM,CAACI;AAFnB;;AAIF,SAAKZ,eAAL;AACE,6CACKO,KADL;AAEEF,QAAAA,WAAW,EAAEG,MAAM,CAACI;AAFtB;;AAKF;AACE,aAAOL,KAAP;AA9BJ;AAgCD,CAjCD;;AAmCA,eAAeZ,eAAe,CAAC;AAC7BO,EAAAA,IAAI,EAAEI;AADuB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport { Update_Radius, Fetch_User, SET_LOCATION , update_User, Progression_Bar} from '../types'; \n\nconst INITIAL_STATE = {\n  user:{},\n  location: {},\n  radius: 0,\n  progressBar: 0\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case Update_Radius:\n      console.log(\"in radiuss reducer\", action.payload)\n      return{\n        ...state,\n        radius: action.payload\n      }\n    case Fetch_User:\n      return{\n        ...state,\n        user: action.payload,\n        radius: action.payload.radius\n      }\n    case update_User:\n      return{\n        ...state,\n        user: action.payload\n      }  \n    case SET_LOCATION:\n      return{\n        ...state,\n        location: action.payload\n      }\n    case Progression_Bar:\n      return{\n        ...state,\n        progressBar: action.payload\n      }\n\n    default:\n      return state\n  }\n};\n\nexport default combineReducers({\n  user: userReducer\n});"]},"metadata":{},"sourceType":"module"}
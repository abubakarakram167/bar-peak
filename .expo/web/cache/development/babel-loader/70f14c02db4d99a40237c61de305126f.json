{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport { GET_ADMIN_SETTINGS, Near_Location_Business, FILTERED_BUSINESS, Empty_Business, ADD_Rating, Search_Results, getFavouritesBusiness, selectSpecifcCategoryEstablishments, add_Favourite, Update_Rating } from \"../types\";\nvar INITIAL_STATE = {\n  businesses: [],\n  filterBusinesses: {},\n  rating: {},\n  searchResults: [],\n  favouriteBusiness: [],\n  selectedEstablishmentCategory: '',\n  addToFavourite: '',\n  showFavorites: false,\n  adminSettings: {}\n};\n\nvar businessReducer = function businessReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Near_Location_Business:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        businesses: action.payload\n      });\n\n    case GET_ADMIN_SETTINGS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        adminSettings: action.payload\n      });\n\n    case add_Favourite:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favoutiteBusiness: state.favouriteBusiness.concat(action.payload)\n      });\n\n    case selectSpecifcCategoryEstablishments:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedEstablishmentCategory: action.payload\n      });\n\n    case getFavouritesBusiness:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favouriteBusiness: action.payload\n      });\n\n    case Search_Results:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchResults: action.payload\n      });\n\n    case FILTERED_BUSINESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filterBusinesses: action.payload,\n        showFavorites: action.payload.isFavorite\n      });\n\n    case Empty_Business:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filterBusinesses: {}\n      });\n\n    case ADD_Rating:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rating: action.payload\n      });\n\n    case Update_Rating:\n      console.log(\"the action.payload\", action.payload.markerId);\n      console.log(\"the business\", state.businesses[0]);\n      var index = state.businesses.findIndex(function (todo) {\n        return todo._id === action.payload.markerId;\n      });\n\n      var newArray = _toConsumableArray(state.businesses);\n\n      newArray[index].rating = action.payload.rating;\n      console.log(\"......///////////////////.////////////////\");\n      console.log(\"after updating\", newArray[index]);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        businesses: newArray\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  business: businessReducer\n});","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/redux/reducers/Business.js"],"names":["combineReducers","GET_ADMIN_SETTINGS","Near_Location_Business","FILTERED_BUSINESS","Empty_Business","ADD_Rating","Search_Results","getFavouritesBusiness","selectSpecifcCategoryEstablishments","add_Favourite","Update_Rating","INITIAL_STATE","businesses","filterBusinesses","rating","searchResults","favouriteBusiness","selectedEstablishmentCategory","addToFavourite","showFavorites","adminSettings","businessReducer","state","action","type","payload","favoutiteBusiness","concat","isFavorite","console","log","markerId","index","findIndex","todo","_id","newArray","business"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport { \n  GET_ADMIN_SETTINGS,\n  Near_Location_Business, \n  FILTERED_BUSINESS, \n  Empty_Business, \n  ADD_Rating, \n  Search_Results, \n  getFavouritesBusiness, \n  selectSpecifcCategoryEstablishments, \n  add_Favourite, \n  Update_Rating \n} from '../types'; \n\nconst INITIAL_STATE = {\n  businesses: [],\n  filterBusinesses: {},\n  rating: {},\n  searchResults: [],\n  favouriteBusiness: [],\n  selectedEstablishmentCategory: '',\n  addToFavourite: '',\n  showFavorites: false,\n  adminSettings: {}\n};\n\nconst businessReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n\n    case Near_Location_Business:\n      return{\n        ...state,\n        businesses: action.payload\n      }\n    case GET_ADMIN_SETTINGS: \n      return {\n        ...state,\n        adminSettings: action.payload\n      }\n    case add_Favourite:\n      return {\n        ...state,\n        favoutiteBusiness: state.favouriteBusiness.concat(action.payload)\n      }  \n    case selectSpecifcCategoryEstablishments:\n      return{\n        ...state,\n        selectedEstablishmentCategory: action.payload\n      }\n    case getFavouritesBusiness:\n      return{\n        ...state,\n        favouriteBusiness: action.payload\n      }\n    case Search_Results: \n      return {\n       ...state,\n        searchResults: action.payload\n      }  \n    case FILTERED_BUSINESS:\n      return{\n        ...state,\n        filterBusinesses: action.payload,\n        showFavorites:action.payload.isFavorite\n      }\n    case Empty_Business:\n      return{\n        ...state,\n        filterBusinesses: {}\n      }\n    case ADD_Rating:\n      return {\n        ...state,\n        rating: action.payload\n      }\n    case Update_Rating:\n      console.log(\"the action.payload\", action.payload.markerId)\n      console.log(\"the business\", state.businesses[0])\n      const index = state.businesses.findIndex(todo => todo._id === action.payload.markerId)\n      const newArray = [...state.businesses]\n      newArray[index].rating = action.payload.rating\n      \n      \n      console.log(\"......///////////////////.////////////////\")\n      console.log(\"after updating\", newArray[index])\n      return {\n        ...state,\n        businesses:  newArray\n      }    \n    default:\n      return state\n  }\n};\n\nexport default combineReducers({\n  business: businessReducer\n});"]},"metadata":{},"sourceType":"module"}
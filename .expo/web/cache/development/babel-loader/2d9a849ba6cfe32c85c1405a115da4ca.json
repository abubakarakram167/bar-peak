{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport { Near_Location_Business, FILTERED_BUSINESS, Empty_Business, ADD_Rating, Search_Results, getFavouritesBusiness, selectSpecifcCategoryEstablishments, add_Favourite } from \"../types\";\nvar INITIAL_STATE = {\n  businesses: [],\n  filterBusinesses: {},\n  rating: {},\n  searchResults: [],\n  favouriteBusiness: [],\n  selectedEstablishmentCategory: '',\n  addToFavourite: ''\n};\n\nvar businessReducer = function businessReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Near_Location_Business:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        businesses: action.payload\n      });\n\n    case add_Favourite:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favoutiteBusiness: state.favouriteBusiness.concat(action.payload)\n      });\n\n    case selectSpecifcCategoryEstablishments:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedEstablishmentCategory: action.payload\n      });\n\n    case getFavouritesBusiness:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favouriteBusiness: action.payload\n      });\n\n    case Search_Results:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchResults: action.payload\n      });\n\n    case FILTERED_BUSINESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filterBusinesses: action.payload\n      });\n\n    case Empty_Business:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filterBusinesses: {}\n      });\n\n    case ADD_Rating:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rating: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  business: businessReducer\n});","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/redux/reducers/Business.js"],"names":["combineReducers","Near_Location_Business","FILTERED_BUSINESS","Empty_Business","ADD_Rating","Search_Results","getFavouritesBusiness","selectSpecifcCategoryEstablishments","add_Favourite","INITIAL_STATE","businesses","filterBusinesses","rating","searchResults","favouriteBusiness","selectedEstablishmentCategory","addToFavourite","businessReducer","state","action","type","payload","favoutiteBusiness","concat","business"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAAQC,sBAAR,EAAgCC,iBAAhC,EAAmDC,cAAnD,EAAmEC,UAAnE,EAA+EC,cAA/E,EAA+FC,qBAA/F,EAAsHC,mCAAtH,EAA2JC,aAA3J;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,EADQ;AAEpBC,EAAAA,gBAAgB,EAAE,EAFE;AAGpBC,EAAAA,MAAM,EAAE,EAHY;AAIpBC,EAAAA,aAAa,EAAE,EAJK;AAKpBC,EAAAA,iBAAiB,EAAE,EALC;AAMpBC,EAAAA,6BAA6B,EAAE,EANX;AAOpBC,EAAAA,cAAc,EAAE;AAPI,CAAtB;;AAUA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BT,aAA0B;AAAA,MAAXU,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKnB,sBAAL;AACE,6CACKiB,KADL;AAEER,QAAAA,UAAU,EAAES,MAAM,CAACE;AAFrB;;AAIF,SAAKb,aAAL;AACE,6CACKU,KADL;AAEEI,QAAAA,iBAAiB,EAAEJ,KAAK,CAACJ,iBAAN,CAAwBS,MAAxB,CAA+BJ,MAAM,CAACE,OAAtC;AAFrB;;AAIF,SAAKd,mCAAL;AACE,6CACKW,KADL;AAEEH,QAAAA,6BAA6B,EAAEI,MAAM,CAACE;AAFxC;;AAIF,SAAKf,qBAAL;AACE,6CACKY,KADL;AAEEJ,QAAAA,iBAAiB,EAAEK,MAAM,CAACE;AAF5B;;AAIF,SAAKhB,cAAL;AACE,6CACIa,KADJ;AAEEL,QAAAA,aAAa,EAAEM,MAAM,CAACE;AAFxB;;AAIF,SAAKnB,iBAAL;AACE,6CACKgB,KADL;AAEEP,QAAAA,gBAAgB,EAAEQ,MAAM,CAACE;AAF3B;;AAIF,SAAKlB,cAAL;AACE,6CACKe,KADL;AAEEP,QAAAA,gBAAgB,EAAE;AAFpB;;AAIF,SAAKP,UAAL;AACE,6CACKc,KADL;AAEEN,QAAAA,MAAM,EAAEO,MAAM,CAACE;AAFjB;;AAIF;AACE,aAAOH,KAAP;AA3CJ;AA6CD,CA9CD;;AAgDA,eAAelB,eAAe,CAAC;AAC7BwB,EAAAA,QAAQ,EAAEP;AADmB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport {Near_Location_Business, FILTERED_BUSINESS, Empty_Business, ADD_Rating, Search_Results, getFavouritesBusiness, selectSpecifcCategoryEstablishments, add_Favourite } from '../types'; \n\nconst INITIAL_STATE = {\n  businesses: [],\n  filterBusinesses: {},\n  rating: {},\n  searchResults: [],\n  favouriteBusiness: [],\n  selectedEstablishmentCategory: '',\n  addToFavourite: ''\n};\n\nconst businessReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n\n    case Near_Location_Business:\n      return{\n        ...state,\n        businesses: action.payload\n      }\n    case add_Favourite:\n      return {\n        ...state,\n        favoutiteBusiness: state.favouriteBusiness.concat(action.payload)\n      }  \n    case selectSpecifcCategoryEstablishments:\n      return{\n        ...state,\n        selectedEstablishmentCategory: action.payload\n      }\n    case getFavouritesBusiness:\n      return{\n        ...state,\n        favouriteBusiness: action.payload\n      }\n    case Search_Results: \n      return {\n       ...state,\n        searchResults: action.payload\n      }  \n    case FILTERED_BUSINESS:\n      return{\n        ...state,\n        filterBusinesses: action.payload\n      }\n    case Empty_Business:\n      return{\n        ...state,\n        filterBusinesses: {}\n      }\n    case ADD_Rating:\n      return {\n        ...state,\n        rating: action.payload\n      }    \n    default:\n      return state\n  }\n};\n\nexport default combineReducers({\n  business: businessReducer\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/abubakarakram/development/projects/backup bar peakk/client/CustomNavigation.js\",\n    _this2 = this;\n\nimport React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport userSettings from \"./src/screens/userSettings\";\nimport SignUpScreen from \"./src/screens/SignUpScreen\";\nimport SplashScreen from \"./src/screens/SplashScreen\";\nimport MyVibeScreen from \"./src/screens/MyVibe\";\nimport Screen2 from \"./screens/Screen2\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport vibeInfoComponent from \"./src/screens/vibeInfoScreen\";\nimport radiusScreen from \"./src/screens/radiusScreen\";\nimport editProfileScreen from \"./src/screens/EditProfile\";\nimport MyFavouritesScreen from \"./src/screens/MyFavourites\";\nimport SpecificCategoryScreen from \"./src/screens/specificCategoryFavourite\";\nimport { Icon } from 'react-native-elements';\nimport Text from \"react-native-web/dist/exports/Text\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nvar screenOptions = {\n  headerStyle: {\n    backgroundColor: '#2b3538',\n    margin: 0,\n    shadowColor: 'transparent'\n  },\n  tabBarVisible: false,\n  headerShown: false,\n  headerLeft: function headerLeft() {\n    return null;\n  }\n};\n\nfunction HomeApp() {\n  var _this = this;\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Screen 1\",\n    tabBarOptions: {\n      activeTintColor: 'red',\n      inactiveTintColor: 'grey',\n      style: {\n        backgroundColor: 'white',\n        borderTopWidth: 0,\n        shadowOffset: {\n          width: 5,\n          height: 3\n        },\n        shadowColor: 'black',\n        shadowOpacity: 0.5,\n        elevation: 5\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Screen 1\",\n    component: HomeTabScreen,\n    options: function options(_ref) {\n      var navigation = _ref.navigation;\n      var currentRoute = navigation.state;\n      return {\n        tabBarVisible: true,\n        tabBarLabel: 'Home',\n        unmountOnBlur: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var tintColor = _ref2.tintColor;\n          return React.createElement(Icon, {\n            name: \"ios-home\",\n            type: \"ionicon\",\n            size: 35,\n            color: tintColor,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }\n          });\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Screen 2\",\n    component: SecondScreenNavigator,\n    options: {\n      tabBarLabel: 'My Favorites',\n      unmountOnBlur: true,\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var tintColor = _ref3.tintColor;\n        return React.createElement(Icon, {\n          name: \"ios-heart\",\n          type: \"ionicon\",\n          size: 35,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"vibeTabNavigator\",\n    component: MyVibeTab,\n    options: {\n      tabBarLabel: 'My Vibe',\n      unmountOnBlur: true,\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var tintColor = _ref4.tintColor;\n        return React.createElement(Icon, {\n          name: \"ios-thermometer\",\n          type: \"ionicon\",\n          color: tintColor,\n          size: 35,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Screen 4\",\n    component: userProfile,\n    options: {\n      tabBarLabel: 'Profile',\n      unmountOnBlur: true,\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var tintColor = _ref5.tintColor;\n        return React.createElement(Icon, {\n          name: \"ios-person\",\n          type: \"ionicon\",\n          color: tintColor,\n          size: 35,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 6\n    }\n  }));\n}\n\nvar FirstScreenNavigator = function FirstScreenNavigator() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"SplashScreen\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"HomeApp\",\n    component: HomeApp,\n    options: function options() {\n      return screenOptions;\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"LoginScreen\",\n    component: LoginScreen,\n    options: function options(_ref6) {\n      var navigation = _ref6.navigation;\n      return screenOptions;\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SplashScreen\",\n    component: SplashScreen,\n    options: function options() {\n      return screenOptions;\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SignUpScreen\",\n    component: SignUpScreen,\n    options: function options() {\n      return screenOptions;\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport { FirstScreenNavigator };\n\nvar SecondScreenNavigator = function SecondScreenNavigator() {\n  return React.createElement(Stack.Navigator, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"MyFavourites\",\n    component: MyFavouritesScreen,\n    options: function options() {\n      return screenOptions;\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SpecificCategoryFavourites\",\n    component: SpecificCategoryScreen,\n    options: {\n      title: \"\",\n      unmountInactiveRoutes: true\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 10\n    }\n  }));\n};\n\nvar HomeTabScreen = function HomeTabScreen() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: function options() {\n      return screenOptions;\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport { SecondScreenNavigator };\n\nvar MyVibeTab = function MyVibeTab() {\n  return React.createElement(Stack.Navigator, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"myVibe\",\n    component: MyVibeScreen,\n    options: {\n      title: \"Setting My Vibe\",\n      headerShown: true,\n      headerLeft: function headerLeft() {\n        return null;\n      },\n      unmountInactiveRoutes: true,\n      headerStyle: {\n        backgroundColor: '#b3b5b4'\n      },\n      headerTitleStyle: {\n        color: 'black'\n      }\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport { MyVibeTab };\n\nvar userProfile = function userProfile() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"userSettingOptions\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"userSettingOptions\",\n    component: userSettings,\n    options: {\n      title: \"Settings\",\n      headerShown: true,\n      headerLeft: function headerLeft() {\n        return null;\n      }\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"vibeInfo\",\n    component: vibeInfoComponent,\n    options: {\n      title: \"Your Vibe's\",\n      headerShown: true\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"radiusScreen\",\n    component: radiusScreen,\n    options: {\n      title: \"Select Radius\",\n      headerShown: true\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"editProfileScreen\",\n    component: editProfileScreen,\n    options: {\n      title: \"Edit Profile\",\n      headerShown: true\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport { userProfile };","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/CustomNavigation.js"],"names":["React","createStackNavigator","LoginScreen","HomeScreen","userSettings","SignUpScreen","SplashScreen","MyVibeScreen","Screen2","createBottomTabNavigator","vibeInfoComponent","radiusScreen","editProfileScreen","MyFavouritesScreen","SpecificCategoryScreen","Icon","Tab","Stack","screenOptions","headerStyle","backgroundColor","margin","shadowColor","tabBarVisible","headerShown","headerLeft","HomeApp","activeTintColor","inactiveTintColor","style","borderTopWidth","shadowOffset","width","height","shadowOpacity","elevation","HomeTabScreen","navigation","currentRoute","state","tabBarLabel","unmountOnBlur","tabBarIcon","tintColor","SecondScreenNavigator","MyVibeTab","userProfile","FirstScreenNavigator","title","unmountInactiveRoutes","headerTitleStyle","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport LoginScreen from './src/screens/LoginScreen';\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport userSettings from \"./src/screens/userSettings\";\nimport SignUpScreen from './src/screens/SignUpScreen';\nimport SplashScreen from './src/screens/SplashScreen';\nimport MyVibeScreen from './src/screens/MyVibe';\nimport Screen2 from \"./screens/Screen2\";\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs'\nimport vibeInfoComponent from \"./src/screens/vibeInfoScreen\";\nimport radiusScreen from \"./src/screens/radiusScreen\";\nimport editProfileScreen from \"./src/screens/EditProfile\";\nimport MyFavouritesScreen from \"./src/screens/MyFavourites\";\nimport SpecificCategoryScreen from \"./src/screens/specificCategoryFavourite\";\nimport { Icon } from 'react-native-elements'\nimport {Text} from 'react-native'\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();  // creates object for Stack Navigator\n\nconst screenOptions = {\n  headerStyle: {\n    backgroundColor: '#2b3538',\n    margin: 0,\n    shadowColor: 'transparent'\n  },\n  tabBarVisible: false,\n  headerShown: false,\n  headerLeft: () => {return null}\n}\n\n\nfunction HomeApp() {\n  return (\n    <Tab.Navigator\n      initialRouteName = \"Screen 1\"\n      tabBarOptions = {{\n        activeTintColor: 'red',\n        inactiveTintColor: 'grey',\n        style: {\n          backgroundColor: 'white',\n          borderTopWidth: 0,\n          shadowOffset: { width: 5, height: 3 },\n          shadowColor: 'black',\n          shadowOpacity: 0.5,\n          elevation: 5\n        },\n        \n      }}\n    >\n    <Tab.Screen\n      name=\"Screen 1\"\n      component={HomeTabScreen}  // Replaced Screen 1\n      options  = { ({ navigation })=> {\n        const currentRoute = navigation.state\n        // const { routeName } = currentRoute;\n        \n        return{\n          tabBarVisible: true,\n          tabBarLabel: 'Home',\n          unmountOnBlur: false,\n          tabBarIcon: ({ tintColor }) => (\n            <Icon\n             name='ios-home'\n             type = 'ionicon'\n             size={35}\n             color = {tintColor}  \n            />\n            // <Icon name=\"heart\"  color = {tintColor} size = {24} ></Icon>\n          )\n        }      \n      }}\n    />\n    <Tab.Screen\n      name=\"Screen 2\"\n      component={SecondScreenNavigator}  // Replaced Screen 2\n      options = \n      {\n        {\n          tabBarLabel: 'My Favorites',\n          unmountOnBlur: true,\n          tabBarIcon: ({ tintColor }) => (\n            <Icon \n              name=\"ios-heart\"\n              type = 'ionicon'\n              size = {35}  \n              color = {tintColor} \n            />\n          )\n        }\n      }\n    />\n    <Tab.Screen\n      name=\"vibeTabNavigator\"\n      component={MyVibeTab}  // Replaced Screen 3\n      options = \n      {\n        {\n          tabBarLabel: 'My Vibe',\n          unmountOnBlur: true,\n          tabBarIcon: ({ tintColor }) => (\n            <Icon \n              name=\"ios-thermometer\"\n              type = 'ionicon'  \n              color = {tintColor} \n              size = {35}\n            />\n          )\n        }\n      }\n    />\n     <Tab.Screen\n      name=\"Screen 4\"\n      component={userProfile}  // Replaced Screen 3\n      options = \n      {\n        {\n          tabBarLabel: 'Profile',\n          unmountOnBlur: true,\n          tabBarIcon: ({ tintColor }) => (\n            <Icon \n              name=\"ios-person\"\n              type = 'ionicon'  \n              color = {tintColor}\n              size = {35} \n            />\n          )\n        }\n      }\n    />\n  </Tab.Navigator>\n  );\n}\n\n\nconst FirstScreenNavigator = () => {\n  return (\n    <Stack.Navigator \n      initialRouteName = \"SplashScreen\" \n    > \n      <Stack.Screen\n        name=\"HomeApp\"\n        component={HomeApp}\n        options = { ()=> {return screenOptions} }\n      />\n      <Stack.Screen\n        name=\"LoginScreen\"\n        component={LoginScreen}\n        options = { ({ navigation })=> {\n          return screenOptions} \n        }\n      />\n      <Stack.Screen\n        name=\"SplashScreen\"\n        component={SplashScreen}\n        options = { ()=> {return screenOptions} }\n      />\n      <Stack.Screen\n        name=\"SignUpScreen\"\n        component={SignUpScreen}\n        options = { ()=> {return screenOptions} }\n      />\n    </Stack.Navigator>\n  );\n}\n\nexport {FirstScreenNavigator}; // Stack-Navigator for Screen 1 Tab\n\nconst SecondScreenNavigator = () => {\n    return (\n      <Stack.Navigator >\n        <Stack.Screen\n          name=\"MyFavourites\"\n          component={MyFavouritesScreen}\n          options = { ()=> {return screenOptions} }\n        />\n         <Stack.Screen\n          name=\"SpecificCategoryFavourites\"\n          component={SpecificCategoryScreen}\n          options = { \n            { title: \"\",\n              unmountInactiveRoutes: true \n            }\n          }\n        />\n      </Stack.Navigator>\n    );\n}\n\nconst HomeTabScreen = () => {\n  return (\n    <Stack.Navigator initialRouteName = \"Home\" >\n      <Stack.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options = { ()=> {return screenOptions} }\n      />\n    </Stack.Navigator>\n  );\n}\n\n  \n  export {SecondScreenNavigator}; // Stack-Navigator for Screen 2 Tab\n\n  const MyVibeTab = () => {\n    return (\n      <Stack.Navigator >\n        <Stack.Screen\n          name=\"myVibe\"\n          component={MyVibeScreen}\n          options = {\n            { title: \"Setting My Vibe\",\n              headerShown: true,\n              headerLeft: () => {return null},\n              unmountInactiveRoutes: true, \n              headerStyle: { backgroundColor: '#b3b5b4' },\n              headerTitleStyle: {\n                color: 'black'\n              }\n            }\n          }\n        />\n      </Stack.Navigator>\n    );\n  }\n  \n  export {MyVibeTab}; \n\n  const userProfile = () => {\n    return (\n      <Stack.Navigator initialRouteName = \"userSettingOptions\" >\n        <Stack.Screen\n          name=\"userSettingOptions\"\n          component={userSettings}\n          options = {\n          { title: \"Settings\",\n            headerShown: true,\n            headerLeft: () => {return null} \n          }}\n        />\n        <Stack.Screen\n          name=\"vibeInfo\"\n          component={vibeInfoComponent}\n          options = {\n          { title: \"Your Vibe's\",\n            headerShown: true,\n           \n          }}\n        />\n        <Stack.Screen\n          name=\"radiusScreen\"\n          component={radiusScreen}\n          options = {{ \n            title: \"Select Radius\",\n            headerShown: true,   \n          }}\n        />\n        <Stack.Screen\n          name=\"editProfileScreen\"\n          component={editProfileScreen}\n          options = {\n          { title: \"Edit Profile\",\n            headerShown: true,\n           \n          }}\n        />\n      </Stack.Navigator>\n    );\n  }\n  \n  export {userProfile}; "]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/abubakarakram/development/projects/backup bar peakk/client/src/screens/specificCategoryFavourite.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport CategorySpecificBusiness from \"../components/SpecificCategoryBusinessFavorite\";\nimport { connect } from 'react-redux';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Icon } from 'react-native-elements';\nimport { getfilteredBusiness, selectSpecifcCategoryEstablishmentsAction } from \"../../redux/actions/Business\";\nimport { bindActionCreators } from 'redux';\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar SpecificCategoryFavourite = function (_React$Component) {\n  _inherits(SpecificCategoryFavourite, _React$Component);\n\n  var _super = _createSuper(SpecificCategoryFavourite);\n\n  function SpecificCategoryFavourite() {\n    var _this;\n\n    _classCallCheck(this, SpecificCategoryFavourite);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getCurrentCategoryFavourite = function () {\n      var categoryFavourite = _this.props.route.params.categoryFavourite;\n      var favouriteEstablishments = _this.props.favouriteEstablishments;\n      return categoryFavourite.filter(function (establishment) {\n        if (favouriteEstablishments.map(function (establishment) {\n          return establishment._id;\n        }).includes(establishment._id)) return true;\n      }).length;\n    };\n\n    return _this;\n  }\n\n  _createClass(SpecificCategoryFavourite, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$route$par = this.props.route.params,\n          categoryFavourite = _this$props$route$par.categoryFavourite,\n          category = _this$props$route$par.category;\n      var _this$props = this.props,\n          navigation = _this$props.navigation,\n          favouriteEstablishments = _this$props.favouriteEstablishments;\n      console.log(\"the favoruite\", favouriteEstablishments);\n      return React.createElement(View, {\n        style: styles.screen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.favouritesText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, category.title !== \"Night Clubs\" ? category.title + 's' : category.title), React.createElement(Text, {\n        style: styles.favouriteHeading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, this.getCurrentCategoryFavourite(), \" Favorites\")), React.createElement(View, {\n        style: {\n          flex: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, categoryFavourite.map(function (establishment) {\n        if (favouriteEstablishments.map(function (establishment) {\n          return establishment._id;\n        }).includes(establishment._id)) return React.createElement(CategorySpecificBusiness, {\n          establishment: establishment,\n          categoryId: category,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }\n        });\n      }))), React.createElement(TouchableOpacity, {\n        style: styles.mapButton,\n        onPress: function _callee() {\n          var data;\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _regeneratorRuntime.awrap(_this2.props.selectSpecifcCategoryEstablishmentsAction(category._id));\n\n                case 2:\n                  data = _context.sent;\n\n                  _this2.props.getfilteredBusiness(null, null, true);\n\n                  navigation.navigate('Home');\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          textAlign: 'center',\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, \"Map\"), React.createElement(Icon, {\n        name: \"map\",\n        type: \"foundation\",\n        size: 20,\n        color: \"white\",\n        style: {\n          marginLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return SpecificCategoryFavourite;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getfilteredBusiness: getfilteredBusiness,\n    selectSpecifcCategoryEstablishmentsAction: selectSpecifcCategoryEstablishmentsAction\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var category = state.category,\n      business = state.business;\n  return {\n    favouriteEstablishments: business.business.favouriteBusiness,\n    category: category.category.category\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpecificCategoryFavourite);\nvar styles = StyleSheet.create({\n  mapButton: {\n    backgroundColor: \"black\",\n    width: width * 0.23,\n    borderRadius: 20,\n    padding: 15,\n    paddingTop: 8,\n    paddingBottom: 8,\n    paddingRight: 20,\n    position: \"absolute\",\n    top: height * 0.7,\n    left: width * 0.4\n  },\n  favouriteHeading: {\n    fontSize: 20,\n    marginLeft: \"5%\",\n    marginTop: \"10%\",\n    fontWeight: \"500\"\n  },\n  screen: {\n    flex: 1,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  favouritesText: {\n    color: \"black\",\n    fontSize: 30,\n    marginLeft: \"5%\",\n    fontWeight: \"500\"\n  },\n  favouriteTile: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  completeTile: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/src/screens/specificCategoryFavourite.js"],"names":["React","CategorySpecificBusiness","connect","Icon","getfilteredBusiness","selectSpecifcCategoryEstablishmentsAction","bindActionCreators","Dimensions","get","width","height","SpecificCategoryFavourite","getCurrentCategoryFavourite","categoryFavourite","props","route","params","favouriteEstablishments","filter","establishment","map","_id","includes","length","category","navigation","console","log","styles","screen","flex","justifyContent","favouritesText","title","favouriteHeading","mapButton","data","navigate","flexDirection","color","textAlign","fontSize","marginLeft","Component","mapDispatchToProps","dispatch","mapStateToProps","state","business","favouriteBusiness","StyleSheet","create","backgroundColor","borderRadius","padding","paddingTop","paddingBottom","paddingRight","position","top","left","marginTop","fontWeight","favouriteTile","completeTile"],"mappings":"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","sourcesContent":["// Screen1.js\nimport React from 'react'                                       \nimport { StyleSheet, Text, View, ScrollView, Dimensions } from 'react-native' \nimport CategorySpecificBusiness from '../components/SpecificCategoryBusinessFavorite';\nimport { connect } from 'react-redux';\nimport { TouchableOpacity } from 'react-native';\nimport { Icon } from 'react-native-elements'; \nimport {getfilteredBusiness, selectSpecifcCategoryEstablishmentsAction} from '../../redux/actions/Business';\nimport { bindActionCreators } from 'redux';\nconst { width, height } = Dimensions.get(\"window\");\n\nclass SpecificCategoryFavourite extends React.Component {\n\n\n  getCurrentCategoryFavourite = () => {\n    const { categoryFavourite } = this.props.route.params;\n    const { favouriteEstablishments } = this.props;\n    return categoryFavourite.filter((establishment)=>{\n      if(favouriteEstablishments.map(establishment =>  establishment._id).includes(establishment._id))\n        return true\n    }).length\n  }\n\n  render(){\n    const { categoryFavourite, category } = this.props.route.params;\n    const { navigation, favouriteEstablishments } = this.props;\n    console.log(\"the favoruite\", favouriteEstablishments)\n\n    return(\n      <View style={styles.screen}>\n        <View\n          style = {{ flex:1, justifyContent: 'center' }}\n        >\n          <Text\n            style = { styles.favouritesText }\n          >\n            { category.title !== \"Night Clubs\" ? category.title + 's' : category.title  }\n          </Text>\n          <Text\n            style = { styles.favouriteHeading }\n          >\n            { this.getCurrentCategoryFavourite() } Favorites\n          </Text>\n        </View>\n        <View\n          style = {{ flex: 5 }}\n        >\n          <ScrollView>\n            {\n              categoryFavourite.map((establishment)=>{\n                if(favouriteEstablishments.map(establishment =>  establishment._id).includes(establishment._id))\n                return (\n                  <CategorySpecificBusiness establishment = {establishment} categoryId = {category}  />\n                )\n              })\n            }   \n          </ScrollView>    \n        </View>\n        <TouchableOpacity\n          style = {styles.mapButton}\n          onPress = {async()=>{ \n            const data =  await this.props.selectSpecifcCategoryEstablishmentsAction(category._id)\n            this.props.getfilteredBusiness(null, null, true)\n            navigation.navigate('Home');\n          }}\n        > \n          <View style = {{ flex:1, flexDirection: \"row\" }} >\n            <Text style = {{ color: \"white\", textAlign: 'center', fontSize: 16 }} >Map</Text>\n            <Icon\n              name=\"map\"\n              type = 'foundation'\n              size = {20}\n              color = \"white\"\n              style = {{ marginLeft: 10  }}\n            />\n          </View>        \n        </TouchableOpacity>\n      </View>\n    )\n  }\n\n} \n\nconst mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    getfilteredBusiness,\n    selectSpecifcCategoryEstablishmentsAction\n  }, dispatch)\n);\n\nconst mapStateToProps = (state) => {\n  const { category, business} = state\n  return { \n    favouriteEstablishments: business.business.favouriteBusiness,\n    category: category.category.category\n  }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpecificCategoryFavourite);\n\nconst styles = StyleSheet.create({\n  mapButton:{ \n    backgroundColor: \"black\",\n    width: width * 0.23,\n    borderRadius: 20,\n    padding: 15,\n    paddingTop: 8,\n    paddingBottom: 8,\n    paddingRight: 20,\n    position: \"absolute\",\n    top: height * 0.7,\n    left: width * 0.4,\n  },  \n  favouriteHeading:{\n    fontSize: 20,\n    marginLeft: \"5%\",\n    marginTop: \"10%\",\n    fontWeight: \"500\"\n  },\n  screen:{ \n    flex:1, \n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  favouritesText: {\n    color: \"black\",\n    fontSize: 30,\n    marginLeft: \"5%\",\n    fontWeight: \"500\"\n  },\n  favouriteTile: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  completeTile : {\n    flex: 1\n  }\n                                                                   \n})"]},"metadata":{},"sourceType":"module"}
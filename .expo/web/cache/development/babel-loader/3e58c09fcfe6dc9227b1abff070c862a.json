{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport { Show_Rating_modal, Show_Rating_button, Set_CountDown_timer, Show_Vibe_Info_modal } from \"../types\";\nvar INITIAL_STATE = {\n  showRatingModal: false,\n  showRatingButton: true,\n  untilNextRateInSeconds: 30,\n  ratingStartTime: '',\n  showVibeInfoModalAfterVibe: false\n};\n\nvar componentReducer = function componentReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Show_Rating_modal:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        showRatingModal: action.payload\n      });\n\n    case Show_Rating_button:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        showRatingButton: action.payload.showRateItButton,\n        ratingStartTime: action.payload.ratingSaveTime\n      });\n\n    case Set_CountDown_timer:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        untilNextRateInSeconds: action.payload\n      });\n\n    case Show_Vibe_Info_modal:\n      console.log(\"hehehjwbkbndwjk\", action.payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        showVibeInfoModalAfterVibe: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  component: componentReducer\n});","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/redux/reducers/Components.js"],"names":["combineReducers","Show_Rating_modal","Show_Rating_button","Set_CountDown_timer","Show_Vibe_Info_modal","INITIAL_STATE","showRatingModal","showRatingButton","untilNextRateInSeconds","ratingStartTime","showVibeInfoModalAfterVibe","componentReducer","state","action","type","payload","showRateItButton","ratingSaveTime","console","log","component"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,EAAgDC,mBAAhD,EAAqEC,oBAArE;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,eAAe,EAAE,KADG;AAEpBC,EAAAA,gBAAgB,EAAE,IAFE;AAGpBC,EAAAA,sBAAsB,EAAE,EAHJ;AAIpBC,EAAAA,eAAe,EAAE,EAJG;AAKpBC,EAAAA,0BAA0B,EAAE;AALR,CAAtB;;AAQA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BP,aAA0B;AAAA,MAAXQ,MAAW;;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,iBAAL;AACE,6CACKW,KADL;AAEEN,QAAAA,eAAe,EAAEO,MAAM,CAACE;AAF1B;;AAIF,SAAKb,kBAAL;AACE,6CACKU,KADL;AAEEL,QAAAA,gBAAgB,EAAEM,MAAM,CAACE,OAAP,CAAeC,gBAFnC;AAGEP,QAAAA,eAAe,EAAEI,MAAM,CAACE,OAAP,CAAeE;AAHlC;;AAKF,SAAKd,mBAAL;AACE,6CACKS,KADL;AAEEJ,QAAAA,sBAAsB,EAAEK,MAAM,CAACE;AAFjC;;AAIF,SAAKX,oBAAL;AACEc,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,MAAM,CAACE,OAAtC;AACA,6CACKH,KADL;AAEEF,QAAAA,0BAA0B,EAAEG,MAAM,CAACE;AAFrC;;AAIF;AACE,aAAOH,KAAP;AAxBJ;AA0BD,CA3BD;;AA6BA,eAAeZ,eAAe,CAAC;AAC7BoB,EAAAA,SAAS,EAAET;AADkB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport { Show_Rating_modal, Show_Rating_button, Set_CountDown_timer, Show_Vibe_Info_modal } from '../types'; \n\nconst INITIAL_STATE = {\n  showRatingModal: false,\n  showRatingButton: true,\n  untilNextRateInSeconds: 30,\n  ratingStartTime: '',\n  showVibeInfoModalAfterVibe: false\n};\n\nconst componentReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case Show_Rating_modal:\n      return{\n        ...state,\n        showRatingModal: action.payload\n      }\n    case Show_Rating_button:\n      return{\n        ...state,\n        showRatingButton: action.payload.showRateItButton,\n        ratingStartTime: action.payload.ratingSaveTime\n      }\n    case Set_CountDown_timer:\n      return{\n        ...state,\n        untilNextRateInSeconds: action.payload\n      }\n    case Show_Vibe_Info_modal:\n      console.log(\"hehehjwbkbndwjk\", action.payload)\n      return{\n        ...state,\n        showVibeInfoModalAfterVibe: action.payload\n      }\n    default:\n      return state\n  }\n};\n\nexport default combineReducers({\n  component: componentReducer\n});"]},"metadata":{},"sourceType":"module"}
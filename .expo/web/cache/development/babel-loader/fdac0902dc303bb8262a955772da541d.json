{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/abubakarakram/development/projects/backup bar peakk/client/src/screens/SignUpScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { withNavigation } from 'react-navigation';\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport SignUpComponent from \"../components/SignupComponent\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nvar SignUpScreen = function (_React$Component) {\n  _inherits(SignUpScreen, _React$Component);\n\n  var _super = _createSuper(SignUpScreen);\n\n  function SignUpScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      showModal: true,\n      showIndicator: false,\n      color: 'black'\n    };\n    return _this;\n  }\n\n  _createClass(SignUpScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      this.focusListener = navigation.addListener(\"didFocus\", function () {\n        _this2.setState({\n          showModal: true\n        });\n      });\n    }\n  }, {\n    key: \"ActivityIndicatorLoadingView\",\n    value: function ActivityIndicatorLoadingView() {\n      this.setState({\n        showIndicator: true\n      });\n    }\n  }, {\n    key: \"verifyPayment\",\n    value: function verifyPayment(data) {\n      if (data.url === \"https://safepayments.live/member/login\") this.props.navigation.navigate(\"LoginScreen\");\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(data) {\n      console.log(data);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var params = this.props.route.params;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, this.state.showIndicator && React.createElement(View, {\n        style: [styles.activityContainer, styles.activityHorizontal],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 12\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: \"#DCD5D3\",\n        style: {\n          zIndex: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      })), React.createElement(Modal, {\n        visible: this.state.showModal,\n        animationType: \"fade\",\n        presentationStyle: \"overFullScreen\",\n        transparent: true,\n        startInLoadingState: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: Platform.OS === 'ios' ? styles.iosModal : styles.androidModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('LoginScreen');\n        },\n        style: {\n          position: 'absolute',\n          right: 5,\n          top: 10,\n          zIndex: 4\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, React.createElement(Icon, {\n        name: 'close',\n        color: 'black',\n        size: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: styles.modalContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, React.createElement(SignUpComponent, {\n        user: params && params.user,\n        navigation: this.props.navigation,\n        closeModal: function closeModal() {\n          return _this3.setState({\n            showModal: false\n          });\n        },\n        phoneNumber: params && params.phoneNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return SignUpScreen;\n}(React.Component);\n\nexport default withNavigation(SignUpScreen);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    fontWeight: \"bold\",\n    fontSize: 50,\n    color: \"#fb5b5a\",\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"#465881\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 50,\n    color: \"white\"\n  },\n  forgot: {\n    color: \"white\",\n    fontSize: 11\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  SignUpBtn: {\n    width: \"80%\",\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 10,\n    marginBottom: 10\n  },\n  SignUpText: {\n    color: 'white',\n    fontSize: 20\n  },\n  ImageLogo: {\n    width: '50%',\n    height: '9%',\n    marginBottom: \"10%\"\n  },\n  spinnerTextStyle: {\n    color: '#FFF'\n  },\n  androidModal: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    marginTop: '13%'\n  },\n  iosModal: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    marginTop: '23%',\n    width: \"100%\"\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    width: '100%',\n    height: '100%'\n  },\n  ActivityIndicatorStyle: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  activityContainer: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  activityHorizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/src/screens/SignUpScreen.js"],"names":["React","AsyncStorage","withNavigation","Spinner","SignUpComponent","Icon","SignUpScreen","props","state","showModal","showIndicator","color","navigation","focusListener","addListener","setState","data","url","navigate","console","log","params","route","styles","container","activityContainer","activityHorizontal","zIndex","Platform","OS","iosModal","androidModal","position","right","top","modalContainer","user","phoneNumber","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","logo","fontWeight","fontSize","marginBottom","inputView","width","borderRadius","height","padding","inputText","forgot","loginBtn","marginTop","SignUpBtn","SignUpText","ImageLogo","spinnerTextStyle","ActivityIndicatorStyle","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Image, AsyncStorage, ActivityIndicator, Modal, Button, Platform } from 'react-native';\nimport { withNavigation } from 'react-navigation';\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport SignUpComponent from '../components/SignupComponent';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\nclass SignUpScreen extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showModal: true,\n      showIndicator: false,\n      color: 'black'\n    }\n  }\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    this.focusListener = navigation.addListener(\"didFocus\", () => {\n      this.setState({ showModal: true })\n    })\n  }\n\n  ActivityIndicatorLoadingView() {\n    this.setState({ showIndicator: true })\n  }\n\n  verifyPayment(data) {\n    if (data.url === \"https://safepayments.live/member/login\")\n      this.props.navigation.navigate(\"LoginScreen\")\n  }\n\n  onMessage(data) {\n    //Prints out data that was passed.\n    console.log(data);\n  }\n\n  // static navigationOptions = ({ navigation, navigationOptions }) => {\n  //   const { params } = navigation.state;\n\n  //   return {\n  //     title: 'A Nested Details Screen',\n  //     /* These values are used instead of the shared configuration! */\n  //     headerStyle: {\n  //       backgroundColor: 'white',\n  //     },\n  //   };\n  // };\n\n  render() {\n    const {params} = this.props.route;\n  \n    return (\n      <View style={styles.container}>\n        {this.state.showIndicator &&\n          (<View style={[styles.activityContainer, styles.activityHorizontal]}>\n            <ActivityIndicator size=\"large\" color=\"#DCD5D3\" style={{ zIndex: 10 }} />\n          </View>)\n        }\n        <Modal\n          visible={this.state.showModal}\n          animationType=\"fade\"\n          presentationStyle=\"overFullScreen\"\n          transparent={true}\n          startInLoadingState={true}\n        >\n          <View style={Platform.OS === 'ios' ? styles.iosModal : styles.androidModal}>\n            <TouchableOpacity\n              onPress={() => this.props.navigation.navigate('LoginScreen')}\n              style={{ position: 'absolute', right: 5, top: 10, zIndex: 4 }} >\n              <Icon name={'close'} color={'black'} size={30} />\n            </TouchableOpacity>\n            <View style={styles.modalContainer}>\n              <SignUpComponent \n                user = {params && params.user}  \n                navigation = {this.props.navigation} \n                closeModal = { ()=> this.setState({ showModal: false }) }\n                phoneNumber = {params && params.phoneNumber} \n              />\n            </View>\n          </View>\n        </Modal>\n      </View>\n    );\n  }\n}\n\nexport default withNavigation(SignUpScreen);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  logo: {\n    fontWeight: \"bold\",\n    fontSize: 50,\n    color: \"#fb5b5a\",\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"#465881\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 50,\n    color: \"white\"\n  },\n  forgot: {\n    color: \"white\",\n    fontSize: 11\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  SignUpBtn: {\n    width: \"80%\",\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 10,\n    marginBottom: 10\n  },\n  SignUpText: {\n    color: 'white',\n    fontSize: 20\n  },\n  ImageLogo: {\n    width: '50%',\n    height: '9%',\n    marginBottom: \"10%\"\n  },\n  spinnerTextStyle: {\n    color: '#FFF'\n  },\n  androidModal: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    marginTop: '13%'\n  },\n  iosModal: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    marginTop: '23%',\n    width: \"100%\"\n  }\n  ,\n  modalContainer: {\n    backgroundColor: 'white',\n    width: '100%',\n    height: '100%'\n  },\n  ActivityIndicatorStyle: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  activityContainer: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  activityHorizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10\n  }\n\n});"]},"metadata":{},"sourceType":"module"}
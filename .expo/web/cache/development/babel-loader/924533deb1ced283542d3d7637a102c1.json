{"ast":null,"code":"var _jsxFileName = \"/Users/abubakarakram/development/projects/backup bar peakk/client/CustomNavigation.js\",\n    _this2 = this;\n\nimport React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport userSettings from \"./src/screens/userSettings\";\nimport TestScreen from \"./src/screens/testScreen\";\nimport SignUpScreen from \"./src/screens/SignUpScreen\";\nimport SplashScreen from \"./src/screens/SplashScreen\";\nimport MyVibeScreen from \"./src/screens/MyVibe\";\nimport MealMissionMainScreen from \"./src/screens/MealMission\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport vibeInfoComponent from \"./src/screens/vibeInfoScreen\";\nimport radiusScreen from \"./src/screens/radiusScreen\";\nimport editProfileScreen from \"./src/screens/EditProfile\";\nimport MyFavouritesScreen from \"./src/screens/MyFavourites\";\nimport SpecificCategoryScreen from \"./src/screens/specificCategoryFavourite\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nvar screenOptions = {\n  headerStyle: {\n    backgroundColor: '#2b3538',\n    margin: 0,\n    shadowColor: 'transparent'\n  },\n  tabBarVisible: false,\n  headerShown: false,\n  headerLeft: function headerLeft() {\n    return null;\n  }\n};\n\nfunction HomeApp() {\n  var _this = this;\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Screen 1\",\n    tabBarOptions: {\n      activeTintColor: 'red',\n      inactiveTintColor: 'grey',\n      style: {\n        backgroundColor: 'white',\n        borderTopWidth: 0,\n        shadowOffset: {\n          width: 5,\n          height: 3\n        },\n        shadowColor: 'black',\n        shadowOpacity: 0.5,\n        elevation: 5\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Screen 1\",\n    component: HomeTabScreen,\n    options: function options(_ref) {\n      var navigation = _ref.navigation;\n      var currentRoute = navigation.state;\n      return {\n        tabBarVisible: true,\n        tabBarLabel: 'Home',\n        unmountOnBlur: false,\n        tabBarIcon: function tabBarIcon(data) {\n          var focused = data.focused;\n          return React.createElement(Image, {\n            source: focused ? require(\"./assets/icons/ativeHome.png\") : require(\"./assets/icons/home.png\"),\n            style: styles.tabImageSize,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }\n          });\n        },\n        tabBarLabel: function tabBarLabel(data) {\n          var focused = data.focused;\n          return React.createElement(Text, {\n            style: focused ? styles.activeButtonText : styles.buttonText,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 20\n            }\n          }, \"Home\");\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Screen 2\",\n    component: SecondScreenNavigator,\n    options: {\n      tabBarLabel: 'My Favorites',\n      unmountOnBlur: true,\n      tabBarIcon: function tabBarIcon(data) {\n        var focused = data.focused;\n        return React.createElement(Image, {\n          source: focused ? require(\"./assets/icons/activeHeart.png\") : require(\"./assets/icons/heart.png\"),\n          style: styles.tabImageSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }\n        });\n      },\n      tabBarLabel: function tabBarLabel(data) {\n        var focused = data.focused;\n        return React.createElement(Text, {\n          style: focused ? styles.activeButtonText : styles.buttonText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 20\n          }\n        }, \"Favorites\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"vibeTabNavigator\",\n    component: MyVibeTab,\n    options: {\n      tabBarLabel: 'My Vibe',\n      unmountOnBlur: true,\n      tabBarIcon: function tabBarIcon(data) {\n        var focused = data.focused;\n        return React.createElement(Image, {\n          source: focused ? require(\"./assets/icons/activeThermometer.png\") : require(\"./assets/icons/thermometer.png\"),\n          style: styles.tabImageSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }\n        });\n      },\n      tabBarLabel: function tabBarLabel(data) {\n        var focused = data.focused;\n        return React.createElement(Text, {\n          style: focused ? styles.activeButtonText : styles.buttonText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 20\n          }\n        }, \"My Vibe\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Meal Mission\",\n    component: MealMissionTab,\n    options: {\n      tabBarLabel: 'Meal Mission',\n      unmountOnBlur: true,\n      tabBarIcon: function tabBarIcon(data) {\n        var focused = data.focused;\n        return React.createElement(Image, {\n          source: focused ? require(\"./assets/icons/activeMealMission.png\") : require(\"./assets/icons/mealMission.png\"),\n          style: [styles.tabImageSize, {\n            position: 'relative',\n            top: 5\n          }],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }\n        });\n      },\n      tabBarLabel: function tabBarLabel(data) {\n        var focused = data.focused;\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'flex-end',\n            position: 'relative',\n            top: 12\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: [focused ? styles.activeButtonText : styles.buttonText, {\n            width: '80%'\n          }],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 18\n          }\n        }, \"Meal Mission\"), React.createElement(Text, {\n          style: {\n            fontSize: 8,\n            textAlign: 'center',\n            color: '#f59e07',\n            fontWeight: '900'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 18\n          }\n        }, \"Coming Soon\"));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Screen 4\",\n    component: userProfile,\n    options: {\n      tabBarLabel: 'Profile',\n      unmountOnBlur: true,\n      tabBarIcon: function tabBarIcon(data) {\n        var focused = data.focused;\n        return React.createElement(Image, {\n          source: focused ? require(\"./assets/icons/activeProfile.png\") : require(\"./assets/icons/profile.png\"),\n          style: styles.tabImageSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }\n        });\n      },\n      tabBarLabel: function tabBarLabel(data) {\n        var focused = data.focused;\n        return React.createElement(Text, {\n          style: focused ? styles.activeButtonText : styles.buttonText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 20\n          }\n        }, \"Profile\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }));\n}\n\nvar FirstScreenNavigator = function FirstScreenNavigator() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"SplashScreen\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"HomeApp\",\n    component: HomeApp,\n    options: function options() {\n      return screenOptions;\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"LoginScreen\",\n    component: LoginScreen,\n    options: function options(_ref2) {\n      var navigation = _ref2.navigation;\n      return screenOptions;\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SplashScreen\",\n    component: SplashScreen,\n    options: function options() {\n      return screenOptions;\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SignUpScreen\",\n    component: SignUpScreen,\n    options: function options() {\n      return screenOptions;\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"TestScreen\",\n    component: TestScreen,\n    options: function options() {\n      return screenOptions;\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport { FirstScreenNavigator };\n\nvar SecondScreenNavigator = function SecondScreenNavigator() {\n  return React.createElement(Stack.Navigator, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"My Favorites\",\n    component: MyFavouritesScreen,\n    options: function options() {\n      return screenOptions;\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SpecificCategoryFavourites\",\n    component: SpecificCategoryScreen,\n    options: {\n      title: \"\",\n      unmountInactiveRoutes: true\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 10\n    }\n  }));\n};\n\nvar HomeTabScreen = function HomeTabScreen() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: function options() {\n      return screenOptions;\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport { SecondScreenNavigator };\n\nvar MyVibeTab = function MyVibeTab() {\n  return React.createElement(Stack.Navigator, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"myVibe\",\n    component: MyVibeScreen,\n    options: {\n      title: \"Setting My Vibe\",\n      headerShown: true,\n      headerLeft: function headerLeft() {\n        return null;\n      },\n      unmountInactiveRoutes: true,\n      headerStyle: {\n        backgroundColor: '#b3b5b4'\n      },\n      headerTitleStyle: {\n        color: 'black'\n      }\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport { MyVibeTab };\n\nvar MealMissionTab = function MealMissionTab() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"MealMission\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"MealMission\",\n    component: MealMissionMainScreen,\n    options: function options() {\n      return screenOptions;\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport { MealMissionTab };\n\nvar userProfile = function userProfile() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"userSettingOptions\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"userSettingOptions\",\n    component: userSettings,\n    options: {\n      title: \"Settings\",\n      headerShown: false,\n      headerLeft: function headerLeft() {\n        return null;\n      }\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"vibeInfo\",\n    component: vibeInfoComponent,\n    options: {\n      title: \"Your Vibe's\",\n      headerShown: true\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"radiusScreen\",\n    component: radiusScreen,\n    options: {\n      title: \"Select Radius\",\n      headerShown: true\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"editProfileScreen\",\n    component: editProfileScreen,\n    options: {\n      title: \"Edit Profile\",\n      headerShown: true\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport { userProfile };\nvar styles = StyleSheet.create({\n  activeButtonText: {\n    fontSize: 13,\n    fontWeight: '600',\n    color: 'black'\n  },\n  buttonText: {\n    fontSize: 12\n  },\n  tabImageSize: {\n    width: 26,\n    height: 26\n  }\n});","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/CustomNavigation.js"],"names":["React","createStackNavigator","LoginScreen","HomeScreen","userSettings","TestScreen","SignUpScreen","SplashScreen","MyVibeScreen","MealMissionMainScreen","createBottomTabNavigator","vibeInfoComponent","radiusScreen","editProfileScreen","MyFavouritesScreen","SpecificCategoryScreen","Tab","Stack","screenOptions","headerStyle","backgroundColor","margin","shadowColor","tabBarVisible","headerShown","headerLeft","HomeApp","activeTintColor","inactiveTintColor","style","borderTopWidth","shadowOffset","width","height","shadowOpacity","elevation","HomeTabScreen","navigation","currentRoute","state","tabBarLabel","unmountOnBlur","tabBarIcon","data","focused","require","styles","tabImageSize","activeButtonText","buttonText","SecondScreenNavigator","MyVibeTab","MealMissionTab","position","top","flex","justifyContent","fontSize","textAlign","color","fontWeight","userProfile","FirstScreenNavigator","title","unmountInactiveRoutes","headerTitleStyle","StyleSheet","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport LoginScreen from './src/screens/LoginScreen';\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport userSettings from \"./src/screens/userSettings\";\nimport TestScreen from './src/screens/testScreen';\nimport SignUpScreen from './src/screens/SignUpScreen';\nimport SplashScreen from './src/screens/SplashScreen';\nimport MyVibeScreen from './src/screens/MyVibe';\nimport MealMissionMainScreen from './src/screens/MealMission';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs'\nimport vibeInfoComponent from \"./src/screens/vibeInfoScreen\";\nimport radiusScreen from \"./src/screens/radiusScreen\";\nimport editProfileScreen from \"./src/screens/EditProfile\";\nimport MyFavouritesScreen from \"./src/screens/MyFavourites\";\nimport SpecificCategoryScreen from \"./src/screens/specificCategoryFavourite\";\nimport {Text, Image, StyleSheet, View} from 'react-native'\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();  // creates object for Stack Navigator\n\nconst screenOptions = {\n  headerStyle: {\n    backgroundColor: '#2b3538',\n    margin: 0,\n    shadowColor: 'transparent'\n  },\n  tabBarVisible: false,\n  headerShown: false,\n  headerLeft: () => {return null}\n}\n\n\nfunction HomeApp() {\n  return (\n    <Tab.Navigator\n      initialRouteName = \"Screen 1\"\n      tabBarOptions = {{\n        activeTintColor: 'red',\n        inactiveTintColor: 'grey',\n        style: {\n          backgroundColor: 'white',\n          borderTopWidth: 0,\n          shadowOffset: { width: 5, height: 3 },\n          shadowColor: 'black',\n          shadowOpacity: 0.5,\n          elevation: 5\n        },\n        \n      }}\n    >\n    <Tab.Screen\n      name=\"Screen 1\"\n      component={HomeTabScreen}  // Replaced Screen 1\n      options  = { ({ navigation })=> {\n        const currentRoute = navigation.state\n        // const { routeName } = currentRoute;\n        \n        return{\n          tabBarVisible: true,\n          tabBarLabel: 'Home',\n          unmountOnBlur: false,\n          tabBarIcon: ( data) => {    \n            const { focused } = data;   \n            return (\n              <Image \n                source = { focused ? require('./assets/icons/ativeHome.png') : require('./assets/icons/home.png')  }\n                style = {styles.tabImageSize }\n              />\n            )      \n          },\n          tabBarLabel: (data)=> {\n            const { focused } = data;\n            return <Text style = {  focused ? styles.activeButtonText  : styles.buttonText } >Home</Text>\n          }\n        }      \n      }}\n    />\n    <Tab.Screen\n      name=\"Screen 2\"\n      component={SecondScreenNavigator}  // Replaced Screen 2\n      options = \n      {\n        {\n          tabBarLabel: 'My Favorites',\n          unmountOnBlur: true,\n          tabBarIcon: (data) => {    \n            const { focused } = data;   \n            return (\n              <Image \n                source = { focused ? require('./assets/icons/activeHeart.png') : require('./assets/icons/heart.png')  }\n                style = {styles.tabImageSize }\n              />\n            )      \n          },\n          tabBarLabel: (data)=> {\n            const { focused } = data;\n            return <Text style = {  focused ? styles.activeButtonText  : styles.buttonText } >Favorites</Text>\n          }\n        }\n      }\n    />\n    <Tab.Screen\n      name=\"vibeTabNavigator\"\n      component={MyVibeTab}  // Replaced Screen 3\n      options = \n      {\n        {\n          tabBarLabel: 'My Vibe',\n          unmountOnBlur: true,\n          tabBarIcon: (data) => {\n            const { focused } = data;   \n            return (\n              <Image \n                source = { focused ? require('./assets/icons/activeThermometer.png') : require('./assets/icons/thermometer.png')  }\n                style = {styles.tabImageSize }\n              />\n            )  \n          },\n          tabBarLabel: (data)=> {\n            const { focused } = data;\n            return <Text style = {  focused ? styles.activeButtonText  : styles.buttonText } >My Vibe</Text>\n          }\n        }\n      }\n    />\n    <Tab.Screen\n      name=\"Meal Mission\"\n      component={MealMissionTab}  // Replaced Screen 3\n      options = \n      {\n        {\n          tabBarLabel: 'Meal Mission',\n          unmountOnBlur: true,\n          tabBarIcon: (data) => {\n            const { focused } = data;   \n            return (\n              <Image \n                source = { focused ? require('./assets/icons/activeMealMission.png') : require('./assets/icons/mealMission.png')  }\n                style = {[styles.tabImageSize, {position: 'relative', top: 5}] }\n              />\n            )  \n          },\n          tabBarLabel: (data)=> {\n            const { focused } = data;\n            return (\n              <View style = {{ flex: 1, justifyContent: 'flex-end', position: 'relative', top: 12 }} >\n                 <Text style = {  [focused ? styles.activeButtonText  : styles.buttonText, { width: '80%' }] } >Meal Mission</Text>\n                 <Text style = {{ fontSize: 8, textAlign: 'center',color: '#f59e07', fontWeight:'900' }} >Coming Soon</Text>\n              </View>\n            ) \n          }\n        }\n      }\n    />\n    <Tab.Screen\n      name=\"Screen 4\"\n      component={userProfile}  // Replaced Screen 3\n      options = \n      {\n        { \n          tabBarLabel: 'Profile',\n          unmountOnBlur: true,\n          tabBarIcon: (data) => {\n            const { focused } = data;   \n            return (\n              <Image \n                source = { focused ? require('./assets/icons/activeProfile.png') : require('./assets/icons/profile.png')  }\n                style = {styles.tabImageSize }\n              />\n            )  \n          },\n          tabBarLabel: (data)=> {\n            const { focused } = data;\n            return <Text style = {  focused ? styles.activeButtonText  : styles.buttonText } >Profile</Text>\n          }\n        }\n        \n      }\n    />\n  </Tab.Navigator>\n  );\n}\n\n\nconst FirstScreenNavigator = () => {\n  return (\n    <Stack.Navigator \n      initialRouteName = \"SplashScreen\" \n    > \n      <Stack.Screen\n        name=\"HomeApp\"\n        component={HomeApp}\n        options = { ()=> {return screenOptions} }\n      />\n      <Stack.Screen\n        name=\"LoginScreen\"\n        component={LoginScreen}\n        options = { ({ navigation })=> {\n          return screenOptions} \n        }\n      />\n      <Stack.Screen\n        name=\"SplashScreen\"\n        component={SplashScreen}\n        options = { ()=> {return screenOptions} }\n      />\n      <Stack.Screen\n        name=\"SignUpScreen\"\n        component={SignUpScreen}\n        options = { ()=> {return screenOptions} }\n      />\n      <Stack.Screen\n        name=\"TestScreen\"\n        component={TestScreen}\n        options = { ()=> {return screenOptions} }\n      />\n    </Stack.Navigator>\n  );\n}\n\nexport {FirstScreenNavigator}; // Stack-Navigator for Screen 1 Tab\n\nconst SecondScreenNavigator = () => {\n    return (\n      <Stack.Navigator >\n        <Stack.Screen\n          name=\"My Favorites\"\n          component={MyFavouritesScreen}\n          options = { ()=> {return screenOptions} }\n        />\n         <Stack.Screen\n          name=\"SpecificCategoryFavourites\"\n          component={SpecificCategoryScreen}\n          options = { \n            { title: \"\",\n              unmountInactiveRoutes: true \n            }\n          }\n        />\n      </Stack.Navigator>\n    );\n}\n\nconst HomeTabScreen = () => {\n  return (\n    <Stack.Navigator initialRouteName = \"Home\" >\n      <Stack.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options = { ()=> {return screenOptions} }\n      />\n    </Stack.Navigator>\n  );\n}\n\n  \n  export {SecondScreenNavigator}; // Stack-Navigator for Screen 2 Tab\n\n  const MyVibeTab = () => {\n    return (\n      <Stack.Navigator >\n        <Stack.Screen\n          name=\"myVibe\"\n          component={MyVibeScreen}\n          options = {\n            { title: \"Setting My Vibe\",\n              headerShown: true,\n              headerLeft: () => {return null},\n              unmountInactiveRoutes: true, \n              headerStyle: { backgroundColor: '#b3b5b4' },\n              headerTitleStyle: {\n                color: 'black'\n              }\n            }\n          }\n        />\n      </Stack.Navigator>\n    );\n  }\n  \n  export {MyVibeTab}; \n\n  const MealMissionTab = () => {\n    return (\n      <Stack.Navigator initialRouteName = \"MealMission\" >\n        <Stack.Screen\n          name=\"MealMission\"\n          component={MealMissionMainScreen}\n          options = { ()=> {return screenOptions} }\n        />\n      </Stack.Navigator>\n    );\n  }\n  \n    \n  export {MealMissionTab}; // Stack-Navigator for Screen 2 Tab\n\n  const userProfile = () => {\n    return (\n      <Stack.Navigator initialRouteName = \"userSettingOptions\" >\n        <Stack.Screen\n          name=\"userSettingOptions\"\n          component={userSettings}\n          options = {\n          { title: \"Settings\",\n            headerShown: false,\n            headerLeft: () => {return null} \n          }}\n        />\n        <Stack.Screen\n          name=\"vibeInfo\"\n          component={vibeInfoComponent}\n          options = {\n          { title: \"Your Vibe's\",\n            headerShown: true,\n           \n          }}\n        />\n        <Stack.Screen\n          name=\"radiusScreen\"\n          component={radiusScreen}\n          options = {{ \n            title: \"Select Radius\",\n            headerShown: true,   \n          }}\n        />\n        <Stack.Screen\n          name=\"editProfileScreen\"\n          component={editProfileScreen}\n          options = {\n          { title: \"Edit Profile\",\n            headerShown: true,\n           \n          }}\n        />\n      </Stack.Navigator>\n    );\n  }\n  \n  export {userProfile}; \n\n  const styles= StyleSheet.create({\n    activeButtonText:{ \n      fontSize: 13, \n      fontWeight: '600', \n      color: 'black' \n    },\n    buttonText: {\n      fontSize: 12\n    },\n    tabImageSize: {\n      width: 26,\n      height: 26\n    }\n  })"]},"metadata":{},"sourceType":"module"}
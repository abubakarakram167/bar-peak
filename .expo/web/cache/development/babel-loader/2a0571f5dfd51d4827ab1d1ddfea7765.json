{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/abubakarakram/development/projects/backup bar peakk/client/src/screens/radiusScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport { updateRadius } from \"../../redux/actions/User\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport { getfilteredBusiness, emptyBusiness } from \"../../redux/actions/Business\";\nvar milesArray = [0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8];\n\nvar radiusScreen = function (_React$Component) {\n  _inherits(radiusScreen, _React$Component);\n\n  var _super = _createSuper(radiusScreen);\n\n  function radiusScreen(props) {\n    var _this;\n\n    _classCallCheck(this, radiusScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getMilesintoMeters = function (miles) {\n      return miles * 1609;\n    };\n\n    _this.state = {\n      choosenLabel: 0,\n      chooseIndex: 500,\n      spinner: false\n    };\n    return _this;\n  }\n\n  _createClass(radiusScreen, [{\n    key: \"getMetersIntoMiles\",\n    value: function getMetersIntoMiles(meters) {\n      return meters / 1609;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      var _this$props$user$user = this.props.user.user,\n          user = _this$props$user$user.user,\n          radius = _this$props$user$user.radius;\n      console.log(\"the radius\", radius);\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 5,\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.infoText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, \"The Radius ensures that in how much km you gonna see your results.\"), React.createElement(Picker, {\n        selectedValue: this.state.choosenLabel === 0 ? Math.round(this.getMetersIntoMiles(radius) * 2) / 2 : this.state.choosenLabel,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          console.log(\"the item value\", itemValue);\n\n          _this2.setState({\n            choosenLabel: itemValue,\n            chooseIndex: itemIndex\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"0.5\",\n        value: this.getMilesintoMeters(0.5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"1\",\n        value: this.getMilesintoMeters(1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"1.5\",\n        value: this.getMilesintoMeters(1.5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"2\",\n        value: this.getMilesintoMeters(2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"2.5\",\n        value: this.getMilesintoMeters(2.5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"3\",\n        value: this.getMilesintoMeters(3),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"3.5\",\n        value: this.getMilesintoMeters(3.5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"4\",\n        value: this.getMilesintoMeters(4),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"4.5\",\n        value: this.getMilesintoMeters(4.5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"5\",\n        value: this.getMilesintoMeters(5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"5.5\",\n        value: this.getMilesintoMeters(5.5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"6\",\n        value: this.getMilesintoMeters(6),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"6.5\",\n        value: this.getMilesintoMeters(6.5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"7\",\n        value: this.getMilesintoMeters(7),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"7.5\",\n        value: this.getMilesintoMeters(7.5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"8\",\n        value: this.getMilesintoMeters(8),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"8.5\",\n        value: this.getMilesintoMeters(8.5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"9\",\n        value: this.getMilesintoMeters(9),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"9.5\",\n        value: this.getMilesintoMeters(9.5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"10\",\n        value: this.getMilesintoMeters(10),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"10.5\",\n        value: this.getMilesintoMeters(10.5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"11\",\n        value: this.getMilesintoMeters(11),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"11.5\",\n        value: this.getMilesintoMeters(11.5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"12\",\n        value: this.getMilesintoMeters(12),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"12.5\",\n        value: this.getMilesintoMeters(12.5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"13\",\n        value: this.getMilesintoMeters(13),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"13.5\",\n        value: this.getMilesintoMeters(13.5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"14\",\n        value: this.getMilesintoMeters(14),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"14.5\",\n        value: this.getMilesintoMeters(14.5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"15\",\n        value: this.getMilesintoMeters(15),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      })), React.createElement(Text, {\n        style: [styles.text, {\n          fontWeight: '600'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, \"Your Radius: \", this.state.choosenLabel === 0 ? this.getMetersIntoMiles(radius).toFixed(2) : this.getMetersIntoMiles(this.state.choosenLabel), \" miles\"), React.createElement(Text, {\n        style: [styles.text, {\n          marginTop: '10%'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, \"Max Selection is 15 miles\")), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function _callee() {\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this2.setState({\n                    spinner: true\n                  });\n\n                  _context.next = 3;\n                  return _regeneratorRuntime.awrap(_this2.props.updateRadius(_this2.state.choosenLabel));\n\n                case 3:\n                  _context.next = 5;\n                  return _regeneratorRuntime.awrap(_this2.props.emptyBusiness());\n\n                case 5:\n                  _this2.setState({\n                    spinner: false\n                  });\n\n                  navigation.navigate(\"Screen 1\");\n\n                  _this2.props.getfilteredBusiness(null);\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          alignSelf: 'center',\n          fontSize: 25,\n          color: '#3fa1bf'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, \"Done\"))), React.createElement(View, {\n        style: styles.spinnerContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, React.createElement(Spinner, {\n        visible: this.state.spinner,\n        textContent: 'Loading...',\n        textStyle: styles.spinnerTextStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return radiusScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    flexDirection: 'column'\n  },\n  text: {\n    fontSize: 20,\n    alignSelf: 'center'\n  },\n  infoText: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    borderWidth: 0,\n    maxWidth: '80%',\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  spinnerTextStyle: {\n    color: '#FFF'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var user = state.user;\n  return {\n    user: user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateRadius: updateRadius,\n    emptyBusiness: emptyBusiness,\n    getfilteredBusiness: getfilteredBusiness\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(radiusScreen);","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/src/screens/radiusScreen.js"],"names":["React","useState","updateRadius","TouchableOpacity","connect","bindActionCreators","Spinner","getfilteredBusiness","emptyBusiness","milesArray","radiusScreen","props","getMilesintoMeters","miles","state","choosenLabel","chooseIndex","spinner","meters","navigation","user","radius","console","log","flex","styles","container","justifyContent","infoText","Math","round","getMetersIntoMiles","itemValue","itemIndex","setState","text","fontWeight","toFixed","marginTop","navigate","alignSelf","fontSize","color","spinnerContainer","spinnerTextStyle","Component","StyleSheet","create","flexDirection","borderWidth","maxWidth","textAlign","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["//React Native Picker\n//https://aboutreact.com/react-native-picker/\n\n//import React in our code\nimport React, {useState} from 'react';\nimport {updateRadius} from '../../redux/actions/User';\n//import all the components we are going to use\nimport {\n  Picker,\n  View,\n  Text,\n  SafeAreaView,\n  StyleSheet\n} from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport {getfilteredBusiness, emptyBusiness} from '../../redux/actions/Business';\nconst milesArray = [0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8];\n\nclass radiusScreen extends React.Component{\n\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      choosenLabel: 0,\n      chooseIndex: 500,\n      spinner: false\n    }\n  }\n\n  getMilesintoMeters = (miles)=>{\n    return miles * 1609;\n  }\n  getMetersIntoMiles(meters){\n    return meters/1609;\n  }\n\n  render(){\n    const { navigation } = this.props;\n    const { user, radius } = this.props.user.user;\n    console.log(\"the radius\", radius)\n    return(\n      <SafeAreaView style={{flex: 1}}>\n      <View style={styles.container}>\n        {/*Picker with multiple chose to choose*/}\n        {/*selectedValue to set the preselected value if any*/}\n        {/*onValueChange will help to handle the changes*/}\n        <View style = {{flex:5, justifyContent: 'center'}} >\n          <Text style={styles.infoText}>\n            The Radius ensures that in how much km you gonna see your results.\n          </Text>\n          <Picker\n            selectedValue={this.state.choosenLabel === 0 ? Math.round(this.getMetersIntoMiles(radius) * 2) / 2 : this.state.choosenLabel }\n            onValueChange={(itemValue, itemIndex) => {\n              console.log(\"the item value\", itemValue);\n              this.setState(\n                { choosenLabel: itemValue,\n                  chooseIndex: itemIndex\n                }\n              )\n            }}>\n            <Picker.Item label=\"0.5\" value = { this.getMilesintoMeters(0.5) } />\n            <Picker.Item label=\"1\" value = { this.getMilesintoMeters(1)} />\n            <Picker.Item label=\"1.5\" value =  { this.getMilesintoMeters(1.5)}   />\n            <Picker.Item label=\"2\" value = { this.getMilesintoMeters(2)}  />\n            <Picker.Item label=\"2.5\" value = { this.getMilesintoMeters(2.5)}  />\n            <Picker.Item label=\"3\" value = { this.getMilesintoMeters(3)}  />\n            <Picker.Item label=\"3.5\" value = { this.getMilesintoMeters(3.5)}  />\n            <Picker.Item label=\"4\" value = { this.getMilesintoMeters(4)}  />\n            <Picker.Item label=\"4.5\" value = { this.getMilesintoMeters(4.5)}  />\n            <Picker.Item label=\"5\" value = { this.getMilesintoMeters(5)}  />\n            <Picker.Item label=\"5.5\" value = { this.getMilesintoMeters(5.5)}  />\n            <Picker.Item label=\"6\" value = { this.getMilesintoMeters(6)}  />\n            <Picker.Item label=\"6.5\" value = { this.getMilesintoMeters(6.5)}  />\n            <Picker.Item label=\"7\" value = { this.getMilesintoMeters(7)}  />\n            <Picker.Item label=\"7.5\" value = { this.getMilesintoMeters(7.5)}  />\n            <Picker.Item label=\"8\" value = { this.getMilesintoMeters(8)}  />\n            <Picker.Item label=\"8.5\" value = { this.getMilesintoMeters(8.5)}  />\n            <Picker.Item label=\"9\" value = { this.getMilesintoMeters(9)}  />\n            <Picker.Item label=\"9.5\" value = { this.getMilesintoMeters(9.5)}  />\n            <Picker.Item label=\"10\" value = { this.getMilesintoMeters(10)}  />\n            <Picker.Item label=\"10.5\" value = { this.getMilesintoMeters(10.5)}  />\n            <Picker.Item label=\"11\" value = { this.getMilesintoMeters(11)}  />\n            <Picker.Item label=\"11.5\" value = { this.getMilesintoMeters(11.5)}  />\n            <Picker.Item label=\"12\" value = { this.getMilesintoMeters(12)}  />\n            <Picker.Item label=\"12.5\" value = { this.getMilesintoMeters(12.5)}  />\n            <Picker.Item label=\"13\" value = { this.getMilesintoMeters(13)}  />\n            <Picker.Item label=\"13.5\" value = { this.getMilesintoMeters(13.5)}  />\n            <Picker.Item label=\"14\" value = { this.getMilesintoMeters(14)}  />\n            <Picker.Item label=\"14.5\" value = { this.getMilesintoMeters(14.5)}  />\n            <Picker.Item label=\"15\" value = { this.getMilesintoMeters(15)}  />\n          </Picker>\n          <Text style={[styles.text, { fontWeight: '600' }]}>\n            Your Radius: {this.state.choosenLabel === 0 ?  this.getMetersIntoMiles(radius).toFixed(2) : this.getMetersIntoMiles(this.state.choosenLabel) } miles\n          </Text>\n          <Text style={[styles.text, {marginTop: '10%'}]}>\n            Max Selection is 15 miles\n          </Text>\n        </View>\n        <View style= {{flex:1}} >\n          <TouchableOpacity \n            onPress = {async ()=>{\n              this.setState({ spinner: true }) \n              await this.props.updateRadius(this.state.choosenLabel)\n              await this.props.emptyBusiness()\n              this.setState({ spinner: false }) \n              navigation.navigate(\"Screen 1\") \n              this.props.getfilteredBusiness(null);  \n              \n              // navigation.popToTop()\n            }}\n          >\n            <Text style = {{ alignSelf: 'center' , fontSize: 25, color: '#3fa1bf'}} >Done</Text>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.spinnerContainer}>\n          <Spinner\n            visible={this.state.spinner}\n            textContent={'Loading...'}\n            textStyle={styles.spinnerTextStyle}\n          />\n        </View>\n        {/*Text to show selected picker value*/}\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n\n}\n\n\n\n\n// const radiusScreen = () => {\n\n//   const [choosenLabel, setChoosenLabel] = useState('');\n//   const [choosenIndex, setChoosenIndex] = useState('500');\n\n//   return (\n//     <SafeAreaView style={{flex: 1}}>\n//       <View style={styles.container}>\n//         {/*Picker with multiple chose to choose*/}\n//         {/*selectedValue to set the preselected value if any*/}\n//         {/*onValueChange will help to handle the changes*/}\n//         <View style = {{flex:5, justifyContent: 'center'}} >\n//           <Text style={styles.infoText}>\n//             The Radius ensures that in how much km you gonna see your results.\n//           </Text>\n//           <Picker\n//             selectedValue={choosenLabel}\n//             onValueChange={(itemValue, itemIndex) => {\n//               setChoosenLabel(itemValue);\n//               setChoosenIndex(itemIndex);\n//             }}>\n//             <Picker.Item label=\"1000\" value = \"1000\" />\n//             <Picker.Item label=\"2000\" value = \"2000\" />\n//             <Picker.Item label=\"3000\" value = \"3000\" />\n//             <Picker.Item label=\"4000\" value = \"4000\" />\n//             <Picker.Item label=\"5000\" value = \"5000\" />\n//             <Picker.Item label=\"6000\" value = \"6000\" />\n//             <Picker.Item label=\"7000\" value = \"7000\" />\n//             <Picker.Item label=\"8000\" value = \"8000\" />\n//             <Picker.Item label=\"9000\" value = \"9000\" />\n//             <Picker.Item label=\"10000\" value = \"10000\" />\n//             <Picker.Item label=\"11000\" value = \"11000\" />\n//             <Picker.Item label=\"12000\" value = \"12000\" />\n//             <Picker.Item label=\"13000\" value = \"13000\" />\n//             <Picker.Item label=\"14000\" value = \"14000\" />\n//             <Picker.Item label=\"15000\" value = \"15000\" />\n//           </Picker>\n//           <Text style={[styles.text, { fontWeight: '600' }]}>\n//             You Selected: {choosenLabel}\n//           </Text>\n//           <Text style={[styles.text, {marginTop: '10%'}]}>\n//             Max Selection is 15000 m\n//           </Text>\n//         </View>\n//         <View style= {{flex:1}} >\n//           <TouchableOpacity \n//             onPress = {()=>{ navigation.navigate(\"HomeApp\") }}\n//           >\n//             <Text style = {{ alignSelf: 'center' , fontSize: 25, color: '#3fa1bf'}} >Done</Text>\n//           </TouchableOpacity>\n//         </View>\n//         {/*Text to show selected picker value*/}\n//       </View>\n//     </SafeAreaView>\n//   );\n// };\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  text: {\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n  infoText:{\n    justifyContent: 'center',\n    alignSelf: 'center',\n    borderWidth: 0,\n    maxWidth: '80%',\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  spinnerTextStyle: {\n    color: '#FFF'\n  }\n});\n\nconst mapStateToProps = (state) => {\n  const { user } = state\n  return { \n    user: user,\n  }\n};\nconst mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    updateRadius,\n    emptyBusiness,\n    getfilteredBusiness\n  }, dispatch)\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(radiusScreen);\n"]},"metadata":{},"sourceType":"module"}
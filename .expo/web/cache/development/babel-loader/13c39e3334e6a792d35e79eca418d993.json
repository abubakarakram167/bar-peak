{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport { Fetch_Category } from \"../types\";\nvar INITIAL_STATE = {\n  category: []\n};\n\nvar categoryReducer = function categoryReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Fetch_Category:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        category: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  category: categoryReducer\n});","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/redux/reducers/Category.js"],"names":["combineReducers","Fetch_Category","INITIAL_STATE","category","categoryReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAtB;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BH,aAA0B;AAAA,MAAXI,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,cAAL;AACE,6CACKI,KADL;AAEEF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFnB;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD,CAVD;;AAYA,eAAeL,eAAe,CAAC;AAC7BG,EAAAA,QAAQ,EAAEC;AADmB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport { Fetch_Category } from '../types'; \n\nconst INITIAL_STATE = {\n  category: []\n};\n\nconst categoryReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case Fetch_Category:\n      return{\n        ...state,\n        category: action.payload\n      }  \n    default:\n      return state\n  }\n};\n\nexport default combineReducers({\n  category: categoryReducer\n});"]},"metadata":{},"sourceType":"module"}
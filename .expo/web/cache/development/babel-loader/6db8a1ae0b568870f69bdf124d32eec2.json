{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/abubakarakram/development/projects/backup bar peakk/client/src/screens/EditProfile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport moment from 'moment';\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\nimport RNPickerSelect from 'react-native-picker-select';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AlertComponent from \"../components/AlertComponent\";\nimport { removeStorageItem } from \"../components/localStorage\";\nimport { updateUser } from \"../../redux/actions/User\";\nimport ImageUploader from \"../components/ImageUploader\";\nimport DatePicker from \"../components/DatePicker\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar shadowOpt = {\n  width: 160,\n  height: 170,\n  color: \"rgba(0, 0, 0, 0.05)\",\n  border: 2,\n  inset: true,\n  style: {\n    marginVertical: 5\n  }\n};\n\nvar createTwoButtonAlert = function createTwoButtonAlert(message) {\n  return Alert.alert(\"Error\", message, [{\n    text: \"Cancel\",\n    onPress: function onPress() {\n      return console.log(\"Cancel Pressed\");\n    },\n    style: \"cancel\"\n  }, {\n    text: \"OK\",\n    onPress: function onPress() {\n      return console.log(\"OK Pressed\");\n    }\n  }], {\n    cancelable: true\n  });\n};\n\nvar keyboardVerticalOffset = Platform.OS === 'ios' ? 200 : 0;\n\nvar SignUpComponent = function (_React$Component) {\n  _inherits(SignUpComponent, _React$Component);\n\n  var _super = _createSuper(SignUpComponent);\n\n  function SignUpComponent(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpComponent);\n\n    _this = _super.call(this, props);\n\n    _this.onChangeText = function (key, val) {\n      _this.setState(_defineProperty({}, key, val));\n    };\n\n    _this.makeLogout = function () {\n      var navigation = _this.props.navigation;\n      removeStorageItem(navigation);\n    };\n\n    _this.changeDate = function (date) {\n      _this.setState({\n        date: moment(date).format(\"YYYY-MM-DD\"),\n        showPicker: false\n      });\n\n      setTimeout(function () {\n        return _this.setState({\n          showPicker: false\n        });\n      }, 1300);\n      console.log(\"the date\", moment(date).format(\"YYYY-MM-DD\"));\n    };\n\n    _this.updateUser = function _callee() {\n      var navigation, isSameEmail;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                spinner: true\n              });\n\n              navigation = _this.props.navigation;\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(_this.props.updateUser(_this.state));\n\n            case 5:\n              isSameEmail = _context.sent;\n              console.log(\"is Email Change\", isSameEmail);\n              if (!isSameEmail) _this.makeLogout();else {\n                navigation.navigate('Screen 1');\n              }\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(\"the eroorrr\", _context.t0);\n\n              _this.setState({\n                spinner: false,\n                message: _context.t0,\n                showError: true\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 10]], Promise);\n    };\n\n    _this.changeDate = function (date) {\n      _this.setState({\n        date: moment(date).format(\"YYYY-MM-DD\"),\n        showPicker: false\n      });\n\n      setTimeout(function () {\n        return _this.setState({\n          showPicker: false\n        });\n      }, 1300);\n    };\n\n    _this.state = {\n      date: null,\n      showPicker: false,\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      showAlert: true,\n      message: \"\",\n      showError: false,\n      gender: \"\",\n      password: \"\",\n      newEmail: null\n    };\n    return _this;\n  }\n\n  _createClass(SignUpComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var user = this.props.user.user.user;\n      console.log(\"the user\", user);\n      this.setState({\n        date: user.dob,\n        existingEmail: user.email,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        gender: user.gender\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var user = this.props.user.user.user;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }\n      }, React.createElement(ImageUploader, {\n        profilePic: user.profilePic,\n        onUpload: function onUpload(url) {\n          _this2.setState({\n            profilePic: url\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }), this.state.showError && React.createElement(AlertComponent, {\n        showError: this.state.showError,\n        message: this.state.message,\n        closeModal: function closeModal() {\n          return _this2.setState({\n            showError: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 35\n        }\n      }), React.createElement(View, {\n        style: styles.inputForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, React.createElement(KeyboardAwareScrollView, {\n        showsVerticalScrollIndicator: false,\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, React.createElement(TextInput, {\n        style: [styles.inputText],\n        placeholder: \"First Name\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(val) {\n          return _this2.onChangeText('firstName', val);\n        },\n        value: this.state.firstName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Last Name\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(val) {\n          return _this2.onChangeText('lastName', val);\n        },\n        value: this.state.lastName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }\n      }, React.createElement(DatePicker, {\n        dob: this.state.date && this.state.date,\n        onChange: function onChange(date) {\n          _this2.changeDate(date);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      })), user.accountType === \"app\" && React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Email\",\n        ref: \"email\",\n        placeholderTextColor: \"#003f5c\",\n        value: this.state.existingEmail,\n        onChangeText: function onChangeText(val) {\n          return _this2.onChangeText('existingEmail', val);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }))), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 19\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"New Email\",\n        placeholderTextColor: \"#003f5c\",\n        value: this.state.newEmail,\n        onChangeText: function onChangeText(val) {\n          return _this2.onChangeText('newEmail', val);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }\n      })))), React.createElement(View, {\n        style: [styles.inputView, {\n          padding: 0,\n          paddingLeft: 20\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }\n      }, React.createElement(RNPickerSelect, {\n        style: [styles.inputText],\n        placeholderTextColor: \"black\",\n        value: this.state.gender,\n        placeholder: {\n          label: 'Female',\n          value: 'female',\n          color: 'black'\n        },\n        items: [{\n          label: 'Male',\n          value: 'male'\n        }, {\n          label: 'Other',\n          value: 'other'\n        }],\n        onValueChange: function onValueChange(value) {\n          _this2.setState({\n            gender: value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: {\n          width: '40%',\n          alignSelf: 'center',\n          backgroundColor: 'black',\n          marginTop: '10%',\n          borderRadius: '10%'\n        },\n        onPress: function onPress() {\n          _this2.updateUser();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.SignUpText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      }, \"Update\")))), React.createElement(Spinner, {\n        visible: this.state.spinner,\n        textContent: 'Loading...',\n        textStyle: styles.spinnerTextStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SignUpComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var user = state.user;\n  return {\n    user: user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateUser: updateUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpComponent);\nvar styles = StyleSheet.create({\n  SignUpText: {\n    fontSize: 25,\n    color: 'white',\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 10,\n    paddingRight: 10,\n    textAlign: 'center'\n  },\n  spinnerTextStyle: {\n    color: '#FFF'\n  },\n  inputForm: {\n    marginTop: 0,\n    flex: 1,\n    backgroundColor: '#ffffff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 0,\n    borderWidth: 0,\n    width: '100%',\n    height: '53%'\n  },\n  ImageLogo: {\n    width: '35%',\n    height: '15%',\n    marginBottom: \"5%\",\n    backgroundColor: 'white',\n    marginTop: '15%'\n  },\n  inputView: {\n    width: \"100%\",\n    borderRadius: 7,\n    borderWidth: 1,\n    height: 50,\n    marginTop: 20,\n    marginLeft: 0,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 50,\n    color: \"black\",\n    width: width * 0.7\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#ffffff',\n    alignItems: 'center',\n    margin: 0,\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/abubakarakram/development/projects/backup bar peakk/client/src/screens/EditProfile.js"],"names":["React","DateTimePickerModal","moment","Spinner","KeyboardAwareScrollView","RNPickerSelect","connect","bindActionCreators","AlertComponent","removeStorageItem","updateUser","ImageUploader","DatePicker","Dimensions","get","height","width","shadowOpt","color","border","inset","style","marginVertical","createTwoButtonAlert","message","Alert","alert","text","onPress","console","log","cancelable","keyboardVerticalOffset","Platform","OS","SignUpComponent","props","onChangeText","key","val","setState","makeLogout","navigation","changeDate","date","format","showPicker","setTimeout","spinner","state","isSameEmail","navigate","showError","email","firstName","lastName","showAlert","gender","password","newEmail","user","dob","existingEmail","styles","container","profilePic","url","inputForm","flex","inputView","inputText","accountType","padding","paddingLeft","label","value","alignSelf","backgroundColor","marginTop","borderRadius","SignUpText","spinnerTextStyle","Component","mapStateToProps","mapDispatchToProps","dispatch","StyleSheet","create","fontSize","paddingTop","paddingBottom","paddingRight","textAlign","alignItems","justifyContent","margin","borderWidth","ImageLogo","marginBottom","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, TextInput, View, Image, TouchableOpacity, Text, KeyboardAvoidingView , ScrollView, Alert, Dimensions} from 'react-native';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport moment from 'moment';\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\nimport RNPickerSelect from 'react-native-picker-select';  \nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AlertComponent from '../components/AlertComponent';\nimport { removeStorageItem } from '../components/localStorage';\nimport { updateUser } from '../../redux/actions/User';\nimport ImageUploader from '../components/ImageUploader';\nimport DatePicker from '../components/DatePicker';\n\nconst { height, width } = Dimensions.get('window')\n\nconst shadowOpt = {\n  width:160,\n  height:170,\n  color:\"rgba(0, 0, 0, 0.05)\",\n  border:2,\n  inset: true,\n  style:{marginVertical:5}\n}\n\nconst createTwoButtonAlert = (message) =>\n  Alert.alert(\n    \"Error\",\n    message,\n    [\n      {\n        text: \"Cancel\",\n        onPress: () => console.log(\"Cancel Pressed\"),\n        style: \"cancel\"\n      },\n      { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n    ],\n    { cancelable: true }\n);\n\nconst keyboardVerticalOffset = Platform.OS === 'ios' ? 200 : 0\n\nclass SignUpComponent extends React.Component {\n\t\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n      date : null, \n      showPicker: false,\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      showAlert: true,\n      message: \"\",\n      showError: false,\n      gender: \"\",\n      password: \"\",\n      newEmail: null\n    }\n\t}\n\n\tcomponentDidMount(){\n    const { user } = this.props.user.user;\n    console.log(\"the user\", user);\n    this.setState({\n      date: user.dob,\n      existingEmail: user.email,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      gender: user.gender\n    })\n  }\n  \n  onChangeText = (key, val) => {\n    this.setState({ [key]: val })\n  }\n\n  makeLogout = () => {\n    const { navigation } = this.props\n    removeStorageItem(navigation);\n  }\n\n  changeDate = (date) => {\n    this.setState({ date: moment(date).format(\"YYYY-MM-DD\"), showPicker: false })\n    setTimeout(()=>  this.setState({ showPicker: false }) , 1300)\n    console.log(\"the date\", moment(date).format(\"YYYY-MM-DD\"))\n  }\n\n  updateUser = async() => {\n    this.setState({ spinner: true })\n    const {navigation} = this.props;    \n  \n    try{\n      const isSameEmail=  await this.props.updateUser(this.state)\n      console.log(\"is Email Change\", isSameEmail)\n      if(!isSameEmail)\n        this.makeLogout()\n      else{\n        navigation.navigate('Screen 1')  \n      }\n      \n    }catch(err){\n      console.log(\"the eroorrr\", err)\n      this.setState({ spinner: false, message: err, showError: true })\n    }\n  }\n\n  changeDate = (date) => {\n    this.setState({ date: moment(date).format(\"YYYY-MM-DD\"), showPicker: false })\n    setTimeout(()=>  this.setState({ showPicker: false }) , 1300)\n  \n  }\n  \n\trender(){\n    const { user } = this.props.user.user;\n\t\treturn (\n      <View style = {styles.container} >\n        <ImageUploader profilePic = {user.profilePic} onUpload = {(url)=>{  this.setState({ profilePic: url })  }} />\n        { this.state.showError && <AlertComponent \n            showError = {this.state.showError}  \n            message = {this.state.message} \n            closeModal = { ()=> this.setState({ showError: false  }) }  \n        />}\n        <View style = {styles.inputForm} >\n            <KeyboardAwareScrollView showsVerticalScrollIndicator={false} style ={{ flex:1 }} >  \n              <View style={styles.inputView} >\n                <TextInput\n                  style={[styles.inputText]}\n                  placeholder=\"First Name\"\n                  placeholderTextColor=\"#003f5c\"\n                  onChangeText={val => this.onChangeText('firstName', val)}\n                  value = {this.state.firstName}\n                />\n              </View>\n              <View style={styles.inputView} >\n                <TextInput\n                  style={styles.inputText}\n                  placeholder=\"Last Name\"\n                  placeholderTextColor=\"#003f5c\"\n                  onChangeText={val => this.onChangeText('lastName', val)}\n                  value = {this.state.lastName}\n                />\n              </View>\n              <View style={styles.inputView} >\n                <DatePicker \n                  dob = { this.state.date && this.state.date }\n                  onChange = { (date)=> { \n                    this.changeDate(date)\n                  }} \n                />\n              </View>\n            { user.accountType === \"app\" &&\n              <View>\n                <View>\n                  <View style={styles.inputView} >\n                    <TextInput\n                      style={ styles.inputText }\n                      placeholder=\"Email\"\n                      ref= \"email\"\n                      placeholderTextColor=\"#003f5c\"\n                      value = {this.state.existingEmail}\n                      onChangeText={val => this.onChangeText('existingEmail', val)}\n                    />\n                  </View>         \n                </View>\n                <View>\n                  <View style={styles.inputView} >\n                    <TextInput\n                      style={ styles.inputText }\n                      placeholder=\"New Email\"\n                      placeholderTextColor=\"#003f5c\"\n                      value = {this.state.newEmail}\n                      onChangeText={val => this.onChangeText('newEmail', val)}\n                    />\n                  </View>         \n                </View>\n              </View>\n            }\n              <View style = { [styles.inputView, { padding: 0, paddingLeft: 20 }] } >\n                <RNPickerSelect\n                  style={[styles.inputText ]}\n                  placeholderTextColor=\"black\"\n                  value = {this.state.gender}\n                  placeholder = {\n                    { label: 'Female', value: 'female', color: 'black' }\n                  }\n                  items={[\n                      { label: 'Male', value: 'male' },\n                      { label: 'Other', value: 'other' },\n                  ]}\n                  onValueChange={(value) => {\n                    this.setState({ gender: value })\n                  }}\n                />\n              </View>\n              <TouchableOpacity style={{ width: '40%',alignSelf: 'center' ,backgroundColor: 'black', marginTop: '10%', borderRadius: '10%' }} onPress = { ()=>{this.updateUser()} } >\n                <Text style={styles.SignUpText}>Update</Text>\n              </TouchableOpacity>\n            {/* </KeyboardAvoidingView>\n          </ScrollView> */} \n          </KeyboardAwareScrollView>   \n        </View>\n        <Spinner\n          visible={this.state.spinner}\n          textContent={'Loading...'}\n          textStyle={styles.spinnerTextStyle}\n        />\n      </View>\n    )\n\t}\n}\n\nconst mapStateToProps = (state) => {\n  const { user} = state\n  return { \n    user\n  }\n};\n\nconst mapDispatchToProps = dispatch => (\n  bindActionCreators({\n    updateUser\n  }, dispatch)\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpComponent);\n\nconst styles = StyleSheet.create({\n  SignUpText: {\n    fontSize: 25,\n    color: 'white',\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 10,\n    paddingRight: 10,\n    textAlign: 'center'\n  },\n  spinnerTextStyle: {\n    color: '#FFF'\n  },\n  inputForm: {\n    marginTop: 0,\n    flex: 1,\n    backgroundColor: '#ffffff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 0,\n    borderWidth: 0,\n    width: '100%',\n    height: '53%'\n    \n  },\n \n  ImageLogo:{\n    width: '35%',\n    height: '15%',\n    marginBottom: \"5%\",\n    backgroundColor: 'white',\n    marginTop: '15%'\n  },\n  inputView: {\n    width: \"100%\",\n    //  backgroundColor: \"#465881\",\n    borderRadius: 7,\n    borderWidth: 1,\n    height: 50,\n    // marginTop: 50,\n    marginTop: 20,\n    marginLeft: 0,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 50,\n    color: \"black\",\n    width: width * 0.7\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#ffffff',\n    alignItems: 'center',\n    margin: 0,\n    width: \"100%\"\n  }\n}) \n\n"]},"metadata":{},"sourceType":"module"}